Index: eh_student.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import pymysql as p\r\nimport sys\r\nfrom PyQt5.QtWidgets import *\r\nfrom PyQt5 import uic\r\nimport socket\r\nimport threading\r\nfrom datetime import datetime\r\nimport requests\r\nimport xmltodict as xmltodict\r\nimport math\r\nfrom tkinter import messagebox, Tk\r\nimport json\r\n\r\n\r\nform_class = uic.loadUiType(\"main.ui\")[0]\r\nsvrip = 'localhost'\r\nport = 9000\r\n\r\ndb_host = '10.10.21.105'\r\ndb_port = 3306\r\ndb_user = 'network'\r\ndb_pw = 'aaaa'\r\ndb = 'api'\r\n\r\n\r\ndef db_execute(sql):\r\n    conn = p.connect(host=db_host, port=db_port, user=db_user, password=db_pw, db=db, charset='utf8')\r\n    c = conn.cursor()\r\n    c.execute(sql)\r\n    conn.commit()\r\n    conn.close()\r\n    return c.fetchall()\r\n\r\n\r\nclass WindowClass(QMainWindow, form_class):\r\n    def __init__(self):\r\n        super().__init__()\r\n        self.setupUi(self)\r\n        self.stackedWidget.setCurrentIndex(0)\r\n        self.read_api()\r\n        self.action = True\r\n\r\n        #장은희테스트\r\n        self.stw.setCurrentIndex(3)\r\n\r\n        # 시그널 - 메서드\r\n\r\n        self.hbt_add.clicked.connect(self.signup)\r\n        self.hbt_login.clicked.connect(self.login)\r\n        ##장은희##\r\n        self.sle_chat.returnPressed.connect(self.st_chat) # 실시간 상담채팅\r\n\r\n        # 서버 연결\r\n        self.sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\r\n        self.sock.connect((svrip, port))\r\n        self.p_msg('연결된 서버: ', svrip)\r\n        th = threading.Thread(target=self.receive, args=(self.sock,), daemon=True)\r\n        th.start()\r\n\r\n    # API 자료가 업데이트 돼면 DB자료 변경\r\n    def read_api(self):\r\n        key = 'cbbbb410eb3d4bfa88e79a9172862f'\r\n        url = f'http://www.incheon.go.kr/dp/openapi/data?apicode=10&page=1&key={key}'\r\n        data_total = int(xmltodict.parse(requests.get(url).content)['data']['totalCount'])\r\n        total_page = math.ceil(data_total / 10)\r\n        sql = f'select count(*) from learning_data;'\r\n        api = db_execute(sql)[0][0]\r\n        if api < data_total:\r\n            sql = 'delete from learning_data;'\r\n            db_execute(sql)\r\n            for page in range(1, total_page + 1):\r\n                url = f'http://www.incheon.go.kr/dp/openapi/data?apicode=10&page={page}&key={key}'\r\n                content = requests.get(url).content\r\n                dict = xmltodict.parse(content)\r\n                data = dict['data']\r\n                date_item = data['list']['item']\r\n                for i in date_item:\r\n                    data_listnum = i['listNum']\r\n                    data_year = i['histYear']\r\n                    data_month = i['histDate'][0] + i['histDate'][1]\r\n                    data_day = i['histDate'][2] + i['histDate'][3]\r\n                    date_summary = i['summary']\r\n                    spl = f'insert into learning_data values ({data_listnum},\"{data_year}년 {data_month}월 {data_day}일\",\"{date_summary}\")'\r\n                    db_execute(spl)\r\n\r\n    # 수신 메서드\r\n    def receive(self, c):\r\n        while True:\r\n            rmsg = json.loads(c.recv(1024).decode())\r\n            if rmsg:\r\n                self.p_msg('받은 메시지:', rmsg)\r\n                self.reaction(rmsg[0], rmsg[1])\r\n\r\n    # 반응 메서드\r\n    def reaction(self, head, msg):\r\n        print(head, msg)\r\n        if head == 'login':\r\n            if msg[0] == 'success':\r\n                self.stackedWidget.setCurrentIndex(1)\r\n                self.code = msg[1]\r\n                self.name = msg[2]\r\n                self.messagebox('로그인 성공')\r\n            else:\r\n                self.messagebox('로그인 실패')\r\n        elif head == 'signup':\r\n            if msg[0] == 'success':\r\n                code = msg[1]\r\n                self.messagebox(f'가입 성공, 발급 코드: {code} 입니다.')\r\n            else:\r\n                self.messagebox('가입 실패')\r\n        #####장은희\r\n        # 실시간 상담 (자기자신)\r\n        elif head == 'st_chat':\r\n            self.slw_chat.addItem(f\"{msg[1]}({msg[2]}) : {msg[3]}\")\r\n        # 실시간 상담 (선생님->학생)\r\n        elif head == 'at_chat':\r\n            if self.hle_code.text() == msg[0]:\r\n                self.slw_chat.addItem(f\"{msg[1]}({msg[2]}) : {msg[3]}\")\r\n                self.slw_chat.scrollToBottom()\r\n\r\n\r\n###########################################################################\r\n# 시그널 - 메서드\r\n###########################################################################\r\n    # 로그인 (학생 프로그램으로 서버에 [학생 코드, 권한, 이름] 전송)\r\n    def login(self):\r\n        code = self.hle_code.text()\r\n        name = self.hle_name.text()\r\n        if code and name:\r\n            self.send_msg('login', [code, '학생', name])\r\n        else:\r\n            self.messagebox('로그인 실패')\r\n        self.hle_code.clear()\r\n        self.hle_name.clear()\r\n\r\n    # 회원 가입 (선생, 학생 프로그램 상관없이 서버에 [권한, 이름] 전송)\r\n    def signup(self):\r\n        name = self.hle_add_name.text().split()[0]\r\n        admin = self.hrb_admin.isChecked()\r\n        user = self.hrb_user.isChecked()\r\n        if name:\r\n            if admin:\r\n                self.send_msg('signup', ['관리자', name])\r\n            elif user:\r\n                self.send_msg('signup', ['학생', name])\r\n            self.hle_add_name.clear()\r\n\r\n    #####장은희\r\n    # 상담 (학생 프로그램으로 서버에 [학생코드, 학생이름, 채팅시간, 채팅내용] 전송)\r\n    def st_chat(self):\r\n        chat_time = str(datetime.now()) #strftime(\"%Y-%m-%d %H:%M:%S\")\r\n        time = datetime.now().strftime(\"%H:%M\")\r\n        chat_msg = self.sle_chat.text()\r\n        # self.slw_chat.addItem(f\"{self.name}({time}) : {chat_msg}\")\r\n        if chat_msg and chat_time:\r\n            self.send_msg('st_chat', [self.code, self.name, chat_time, chat_msg, time])\r\n        self.slw_chat.scrollToBottom()\r\n        self.sle_chat.clear()\r\n\r\n\r\n\r\n###########################################################################\r\n# 도구 메서드\r\n###########################################################################\r\n\r\n    # tkinter 를 이용한 messagbox 송출\r\n    def messagebox(self, value):\r\n        tk_window = Tk()\r\n        tk_window.geometry(\"0x0+3000+6000\")\r\n        messagebox.showinfo('안내창', f'{value}')\r\n        tk_window.destroy()\r\n\r\n    # 주제, 내용으로 서버에 데이터 전송\r\n    def send_msg(self, head, value):\r\n        msg = json.dumps([head, value])\r\n        self.sock.sendall(msg.encode())\r\n        self.p_msg('보낸 메시지:', msg)\r\n\r\n    # 메시지 종류, 내용을 매개 변수로 콘솔에 확인 내용 출력\r\n    def p_msg(self, head, *msg):\r\n        if msg:\r\n            print(f'{datetime.now()} / {head} {msg}')\r\n        else:\r\n            print(f'{datetime.now()} / {head}')\r\n\r\n\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    app = QApplication(sys.argv)\r\n    myWindow = WindowClass()\r\n    myWindow.show()\r\n    app.exec_()
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/eh_student.py b/eh_student.py
--- a/eh_student.py	(revision d138544351d7c79df121755491419dcd7f579f09)
+++ b/eh_student.py	(date 1675998546162)
@@ -15,7 +15,7 @@
 form_class = uic.loadUiType("main.ui")[0]
 svrip = 'localhost'
 port = 9000
-
+#
 db_host = '10.10.21.105'
 db_port = 3306
 db_user = 'network'
Index: mainserver.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import pymysql as p\r\nimport socketserver\r\nfrom datetime import datetime\r\nimport json\r\n\r\nserver_ip = 'localhost'\r\nserver_port = 9000\r\n\r\ndb_host = '10.10.21.105'\r\ndb_port = 3306\r\ndb_user = 'network'\r\ndb_pw = 'aaaa'\r\ndb = 'api'\r\n\r\n\r\n# DB에 값을 변경하거나 불러오는 함수\r\ndef db_execute(sql):\r\n    conn = p.connect(host=db_host, port=db_port, user=db_user, password=db_pw, db=db, charset='utf8')\r\n    c = conn.cursor()\r\n    c.execute(sql)\r\n    conn.commit()\r\n    conn.close()\r\n    return c.fetchall()\r\n\r\n\r\n# 소켓 연결 요청 처리\r\nclass TH(socketserver.BaseRequestHandler):\r\n    def handle(self):\r\n        c_sock = self.request\r\n        if c_sock not in server.c_socks:\r\n            server.c_socks.append(c_sock)\r\n        server.p_msg(c_sock, '연결됨')\r\n        server.receive(c_sock)\r\n\r\n\r\n# 소켓 객체 생성\r\nclass TTS(socketserver.ThreadingMixIn, socketserver.TCPServer):\r\n    pass\r\n\r\n\r\n# 메인서버\r\nclass Server:\r\n    def __init__(self):\r\n        self.c_socks = []\r\n        self.admin_socks = []\r\n        self.student_socks = []\r\n\r\n    ###########################################################################\r\n    # 스레드 객체\r\n    ###########################################################################\r\n\r\n    # 수신 메서드 ,클라 연결 종료시 종료 메시지 남기고 연결 소켓 제거\r\n    def receive(self, c):\r\n        while True:\r\n            try:\r\n                rmsg = json.loads(c.recv(4096).decode())\r\n                if rmsg:\r\n                    self.p_msg(c, '받은 메시지:', rmsg)\r\n                    self.reaction(c, rmsg[0], rmsg[1])\r\n            except ConnectionResetError:\r\n                self.p_msg(c, '연결 종료')\r\n                self.c_socks.remove(c)\r\n                if c in self.student_socks:\r\n                    self.student_socks.remove(c)\r\n                if c in self.admin_socks:\r\n                    self.admin_socks.remove(c)\r\n                c.close()\r\n                break\r\n            else:\r\n                continue\r\n\r\n    # 반응 메서드\r\n    def reaction(self, c, head, msg):\r\n        print(head, msg)\r\n        # 로그인\r\n        if head == 'login':\r\n            sql = f\"select * from login_data where member_num = '{msg[0]}' and authority = '{msg[1]}' and member_name='{msg[2]}';\"\r\n            login = db_execute(sql)\r\n            # 클라에서 받은 정보가 DB에 등록 되어 있는경우\r\n            if login:\r\n                # DB에 저장된 문제 등록 목록 및 정보 클라에 전달\r\n                # [로그인성공여부, 회원코드, 회원이름, 문제등록번호목록]\r\n                sql = f\"select distinct quiz_num from quiz;\"\r\n                quiz_num = db_execute(sql)\r\n                self.send_msg(c, 'login', ['success', msg[0], msg[2], quiz_num])\r\n                # 정보를 선생과 학생으로 구분하여 전송하기위해 list에 소켓 저장\r\n                if msg[1] == '관리자':\r\n                    self.admin_socks.append(c)\r\n                else:\r\n                    self.student_socks.append(c)\r\n            # 학생 또는 선생 프로그램에서 다른 권한의 계정으로 로그인 시도한 경우\r\n            # 로그인 정보가 틀린경우\r\n            else:\r\n                self.send_msg(c, 'login', ['failure'])\r\n        # 회원가입\r\n        elif head == 'signup':\r\n            # 관리자 권한 가입 정보 DB에 저장 및 정보 전송 [성공여부, 회원 코드]\r\n            if msg[0] == '관리자':\r\n                # 회원 코드를 생성하기위해 번호조회\r\n                sql = \"select count(*) from login_data where member_num like 'a%';\"\r\n                num = int(db_execute(sql)[0][0]) + 1\r\n                # DB에 회원 정보 등록[회원코드, 권한, 이름]\r\n                sql = f\"insert into login_data values('a{num}', '{msg[0]}', '{msg[1]}')\"\r\n                db_execute(sql)\r\n                self.send_msg(c, 'signup', ['success', f'a{num}'])\r\n            # 학생 권한 가입 정보 DB에 저장 및 정보 전송 [성공여부, 회원 코드]\r\n            else:\r\n                # 회원 코드를 생성하기위해 번호조회\r\n                sql = \"select count(*) from login_data where member_num like 's%';\"\r\n                num = int(db_execute(sql)[0][0]) + 1\r\n                # DB에 회원 정보 등록[회원코드, 권한, 이름]\r\n                sql = f\"insert into login_data values('s{num}', '{msg[0]}','{msg[1]}')\"\r\n                db_execute(sql)\r\n                # 회원관리 DB에 신규 등록\r\n                sql = f\"insert into study_progress values('F','{msg[1]}', '0', '0');\"\r\n                db_execute(sql)\r\n                self.send_msg(c, 'signup', ['success', f's{num}'])\r\n\r\n        # ``` 문제 만들기\r\n        # 문제 등록하기\r\n        elif head == 'register_question':\r\n            sql = \"select count(distinct quiz_num) from quiz;\"\r\n            quiz_num = db_execute(sql)[0][0]\r\n            # 신규 문제\r\n            if msg[0][0] > quiz_num:\r\n                # 문제 DB에 저장\r\n                for v in msg:\r\n                    sql = f\"insert into quiz values('{v[0]}', '{v[1]}', '{v[2]}', '{v[3]}', '{v[4]}');\"\r\n                    db_execute(sql)\r\n                # 관리자 권한을 가진 모든 클라에게 전송 [추가 등록된 문제 등록 번호]\r\n                for administrator in self.admin_socks:\r\n                    self.send_msg(administrator, 'add_acb_num', msg[0][0])\r\n            # 기존 문제 수정\r\n            else:\r\n                sql = f\"delete from quiz where quiz_num = {msg[0][0]};\"\r\n                db_execute(sql)\r\n                for v in msg:\r\n                    sql = f\"insert into quiz values('{v[0]}', '{v[1]}', '{v[2]}', '{v[3]}', '{v[4]}');\"\r\n                    db_execute(sql)\r\n        # 해당 등록 번호의 문제 목록 클라에 전송\r\n        elif head == 'load_quiz':\r\n            sql = f\"select * from quiz where quiz_num= '{msg}'\"\r\n            quiz_list = db_execute(sql)\r\n            self.send_msg(c, 'load_quiz', quiz_list)\r\n        # ```\r\n        ##학생용\r\n        # ```\r\n        # 학생이 학습내용 풀러오기\r\n\r\n        elif head == 'call_contents':\r\n            if msg[1] != '연도선택':\r\n                try:\r\n                    year = msg[1].split(\"~\")\r\n                    print(year)\r\n                    sql = f'SELECT *FROM learning_data WHERE date BETWEEN \"{year[0]}\" AND \"{year[1]}\"'\r\n                    study_contents = db_execute(sql)\r\n                    print(study_contents)\r\n                    self.send_msg(c, 'load_history', study_contents)\r\n                except IndexError:\r\n                    print('study')\r\n            else:\r\n                print('gg')\r\n        elif head == \"save_contents\":  # 학습내용 저장 하기\r\n            sql = f'UPDATE study_progress SET study_progress = \"{msg[0]}:{msg[1]}~{msg[2]}\" WHERE student_name = \"{msg[0]}\"'\r\n            update_progress = db_execute(sql)\r\n            print(update_progress)\r\n\r\n        elif head == 'loading_studying':  # 저장된 학습내용 불러오기\r\n            sql = f'SELECT *FROM learning_data WHERE date BETWEEN \"{msg[1]}\" AND \"{msg[2]}\"'\r\n            find_contents = db_execute(sql)\r\n            self.send_msg(c, 'loading_studying', find_contents)\r\n\r\n        # ```\r\n\r\n    ###########################################################################\r\n    # 도구 메서드\r\n    ###########################################################################\r\n\r\n    # 클라소켓, 주제, 내용으로 클라에 데이터 전송\r\n    def send_msg(self, c, head, value):\r\n        msg = json.dumps([head, value])\r\n        msg = f\"{len(msg):<10}\" + msg\r\n        print(len(msg))\r\n        c.sendall(msg.encode())\r\n        self.p_msg(c, '보낸 메시지:', value)\r\n\r\n    # 클라소켓, 메시지 종류, 내용을 매개 변수로 콘솔에 확인 내용 출력\r\n    def p_msg(self, sock, head, *msg):\r\n        # 단순히 보기 편하게 할려고 만든 조건\r\n        if msg:\r\n            print(f'{datetime.now()} / {sock.getpeername()} / {head} {msg}')\r\n        else:\r\n            print(f'{datetime.now()} / {sock.getpeername()} / {head}')\r\n\r\n\r\nif __name__ == '__main__':\r\n    server = Server()\r\n    with TTS((server_ip, server_port), TH) as TS:\r\n        TS.serve_forever()\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/mainserver.py b/mainserver.py
--- a/mainserver.py	(revision d138544351d7c79df121755491419dcd7f579f09)
+++ b/mainserver.py	(date 1675998546168)
@@ -116,7 +116,7 @@
                 db_execute(sql)
                 self.send_msg(c, 'signup', ['success', f's{num}'])
 
-        # ``` 문제 만들기
+        # ``` 문제 만들기#
         # 문제 등록하기
         elif head == 'register_question':
             sql = "select count(distinct quiz_num) from quiz;"
Index: jyw_teacher.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import json\r\nimport sys\r\nfrom tkinter import messagebox, Tk\r\nfrom PyQt5.QtWidgets import *\r\nfrom PyQt5 import uic\r\nimport socket\r\nimport threading\r\nfrom datetime import datetime\r\n\r\nform_class = uic.loadUiType(\"main.ui\")[0]\r\nsvrip = 'localhost'\r\nport = 9000\r\n\r\n\r\nclass WindowClass(QMainWindow, form_class):\r\n    def __init__(self):\r\n        super().__init__()\r\n        self.setupUi(self)\r\n        self.stackedWidget.setCurrentIndex(0)\r\n        self.user_management = False\r\n\r\n        # 시그널 - 메서드\r\n        # 로그인, 회원가입\r\n        self.hbt_add.clicked.connect(self.signup)\r\n        self.hbt_login.clicked.connect(self.login)\r\n        # 문제 만들기\r\n        self.abt_add.clicked.connect(self.add_space)\r\n        self.abt_del.clicked.connect(self.del_space)\r\n        self.abt_finish.clicked.connect(self.register_question)\r\n        self.abt_cancel.clicked.connect(self.del_atw_q)\r\n        self.atw_q.currentCellChanged.connect(self.total_score)\r\n        self.acb_num.currentIndexChanged.connect(self.send_quiz_num)\r\n        # 학생관리\r\n        self.atw.currentChanged.connect(self.atw_move)\r\n        self.alw_user.itemDoubleClicked.connect(self.study_progress)\r\n\r\n        # 서버 연결\r\n        self.sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\r\n        self.sock.connect((svrip, port))\r\n        self.p_msg('연결된 서버: ', svrip)\r\n        th = threading.Thread(target=self.receive, args=(self.sock,), daemon=True)\r\n        th.start()\r\n\r\n    # 수신 메서드\r\n    def receive(self, c):\r\n        while True:\r\n            new_msg = True\r\n            tmsg = ''\r\n            while True:\r\n                # 전송된 데이터를 20바이트씩 받기\r\n                msg = c.recv(20)\r\n                tmsg += msg.decode()\r\n\r\n                print(tmsg)\r\n                # 전송된 데이터의 길이 정보를 추출\r\n                if new_msg:\r\n                    size = int(msg[:10])\r\n                    # json.loads할 데이터에 길이 정보를 제거\r\n                    tmsg = tmsg[10:]\r\n                    new_msg = False\r\n\r\n                # 전송된 데이터의 길이 정보와 json.loads할 데이터의 길이가 같으면 반복문 종료\r\n                if len(tmsg) == size:\r\n                    break\r\n            rmsg = json.loads(tmsg)\r\n            if rmsg:\r\n                self.p_msg('받은 메시지:', rmsg)\r\n                self.reaction(rmsg[0], rmsg[1])\r\n\r\n    # 반응 메서드\r\n    def reaction(self, head, msg):\r\n        print(head, msg)\r\n        # 로그인\r\n        if head == 'login':\r\n            # 로그인 성공\r\n            if msg[0] == 'success':\r\n                # 나중에 쓸수도 있기에 만든 변수\r\n                self.code = msg[1]\r\n                self.name = msg[2]\r\n                # 관리자 페이지 이동\r\n                self.stackedWidget.setCurrentIndex(2)\r\n                self.atw.setCurrentIndex(0)\r\n                # 문제 등록 번호 콤보박스에 등록\r\n                for i in msg[3]:\r\n                    self.acb_num.addItem(str(i[0]))\r\n                self.messagebox('로그인 성공')\r\n            # 로그인 실패\r\n            else:\r\n                self.messagebox('로그인 실패')\r\n        # 회원가입\r\n        elif head == 'signup':\r\n            # 가입 성공 및 회원 코드 띄우기\r\n            if msg[0] == 'success':\r\n                code = msg[1]\r\n                self.messagebox(f'가입 성공, 발급 코드: {code} 입니다.')\r\n            # 가입 실패 코드 띄우기\r\n            else:\r\n                self.messagebox('가입 실패')\r\n        # ``` 문제 만들기\r\n        # 테이블 위젯에 문제 띄우기\r\n        elif head == 'load_quiz':\r\n            # 테이블 위젯 셋팅\r\n            self.atw_q.setRowCount(0)\r\n            self.atw_q.setRowCount(len(msg))\r\n            # 테이블 위젯 셀에 내용 저장\r\n            for row, quiz_list in enumerate(msg):\r\n                for col, value in enumerate(quiz_list):\r\n                    if col != 0:\r\n                        self.atw_q.setItem(row, col-1, QTableWidgetItem(value))\r\n        # 추가된 문제 등록번호 콤보박스에 저장\r\n        elif head == 'add_acb_num':\r\n            self.acb_num.addItem(str(msg))\r\n        # ```\r\n        # ``` 학생 관리\r\n        # 처음 학생 관리창 들어가면 전체 학생 리스트 불러오기\r\n        elif head == 'management':\r\n            self.alw_user.clear()\r\n            for value in msg:\r\n                self.alw_user.addItem(f'[{value[0]}]{value[1]}')\r\n        # 학생 회원가입시 코드및 이름 받아오기\r\n        elif head == 'add_alw_user':\r\n            self.alw_user.addItem(f'[{msg[0]}]{msg[1]}')\r\n        elif head == 'study':\r\n            self.atw_record.clear()\r\n            if msg != 'False':\r\n                for m in msg[0]:\r\n                    self.add_top_tree(str(m[0]), str(m[1]), str(m[2]), msg[1])\r\n\r\n    # tree 위젯에 item 추가하기\r\n    def add_top_tree(self, num, name, score, value):\r\n        item = QTreeWidgetItem(self.atw_record)\r\n        item.setText(0, num)\r\n        item.setText(1, name)\r\n        item.setText(2, score)\r\n        for i in value:\r\n            if str(i[0]) == num:\r\n                sub_item = QTreeWidgetItem(item)\r\n                sub_item.setText(0, str(i[1]))\r\n                sub_item.setText(1, str(i[2]))\r\n                sub_item.setText(2, str(i[3]))\r\n                sub_item.setText(3, str(i[4]))\r\n                sub_item.setText(4, str(i[5]))\r\n\r\n###########################################################################\r\n# 송신\r\n###########################################################################\r\n\r\n    # 로그인 (선생 프로그램으로 서버에 [선생 코드, 권한, 이름] 전송)\r\n    def login(self):\r\n        code = self.hle_code.text()\r\n        name = self.hle_name.text()\r\n        if code and name:\r\n            self.send_msg('login', [code, '관리자', name])\r\n        else:\r\n            self.messagebox('로그인 실패')\r\n        self.hle_code.clear()\r\n        self.hle_name.clear()\r\n\r\n    # 회원 가입 (선생, 학생 프로그램 상관없이 서버에 [권한, 이름] 전송)\r\n    def signup(self):\r\n        name = self.hle_add_name.text().split()[0]\r\n        admin = self.hrb_admin.isChecked()\r\n        user = self.hrb_user.isChecked()\r\n        if name:\r\n            if admin:\r\n                self.send_msg('signup', ['관리자', name])\r\n            elif user:\r\n                self.send_msg('signup', ['학생', name])\r\n            self.hle_add_name.clear()\r\n\r\n    # 문제 등록 (서버에 [문제 목록] 전송)\r\n    def register_question(self):\r\n        # 콤보 박스 내용이 숫자가 아닌경우 신규 문제 등록\r\n        try:\r\n            box = int(self.acb_num.currentText())\r\n        except ValueError:\r\n            box = self.acb_num.count()\r\n        # 초기 셋팅\r\n        t_list = []\r\n        row = self.atw_q.rowCount()\r\n        col = self.atw_q.columnCount()\r\n        # 테이블 위젯의 셀 내용 list에 저장하기\r\n        try:\r\n            for i in range(row):\r\n                q_list = [box]\r\n                for j in range(col):\r\n                    if j < 2:\r\n                        q_list.append(self.atw_q.item(i, j).text())\r\n                    else:\r\n                        q_list.append(int(self.atw_q.item(i, j).text()))\r\n                t_list.append(q_list)\r\n            # 등록할 문제 목록의 배점 합계가 100점인지 여부 확인\r\n            score = int(self.al_score.text())\r\n            if score == 100:\r\n                self.send_msg('register_question', t_list)\r\n                self.atw_q.clearContents()\r\n                self.atw_q.setRowCount(0)\r\n                self.al_score.setNum(0)\r\n            else:\r\n                self.messagebox('만점은 100 입니다.')\r\n        # 작성된 문제 목록에 문제가 있는경우\r\n        except ValueError:\r\n            self.messagebox('배점 또는 point란에 문자가 있습니다.')\r\n        except AttributeError:\r\n            self.messagebox('빈칸이 있습니다.')\r\n\r\n    # 문제 등록 넘버를 서버로 송신\r\n    def send_quiz_num(self):\r\n        num = self.acb_num.currentText()\r\n        self.send_msg('load_quiz', num)\r\n\r\n    # tab위젯 tab이동시 index 받기\r\n    def atw_move(self):\r\n        tab = self.atw.currentIndex()\r\n        if tab == 1 and not self.user_management:\r\n            self.user_management = True\r\n            self.send_msg('management', '')\r\n\r\n    # 학생관리창에서 학생이름을 더블 클릭하면 서버에 신호 전송\r\n    def study_progress(self):\r\n        name = self.alw_user.currentItem().text().split(']')[1]\r\n        self.send_msg('study', name)\r\n\r\n\r\n###########################################################################\r\n# 송신 기능이 없는 시그널 - 메서드\r\n###########################################################################\r\n\r\n    # 문제목록에 문제 추가 하기\r\n    def add_space(self):\r\n        num = self.atw_q.rowCount()\r\n        self.atw_q.setRowCount(num+1)\r\n\r\n    # 문제목록에 문제 삭제 하기\r\n    def del_space(self):\r\n        max_num = self.atw_q.rowCount()\r\n        num = self.atw_q.currentRow()\r\n        # 테이블 위젯의 선택한 셀이 없는 경우\r\n        if num < 0:\r\n            num = max_num-1\r\n        # 테이블 위젯의 특정 셀의 행 지우기\r\n        self.atw_q.removeRow(num)\r\n\r\n    # 선택셀 변경시 배점 총합을 라벨에 출력\r\n    def total_score(self):\r\n        row = self.atw_q.rowCount()\r\n        score = 0\r\n        # 작성중 계속 시그널이 들어오는 함수로 애러 발생을 pass 처리\r\n        try:\r\n            for i in range(row):\r\n                score += int(self.atw_q.item(i, 2).text())\r\n            self.al_score.setNum(score)\r\n        except AttributeError:\r\n            pass\r\n        except ValueError:\r\n            pass\r\n\r\n    # 문제목록의 내용 전부 삭제\r\n    def del_atw_q(self):\r\n        self.atw_q.clearContents()\r\n        self.atw_q.setRowCount(0)\r\n\r\n###########################################################################\r\n# 도구 메서드\r\n###########################################################################\r\n\r\n    # tkinter 를 이용한 messagbox 송출\r\n    def messagebox(self, value):\r\n        tk_window = Tk()\r\n        tk_window.geometry(\"0x0+3000+6000\")\r\n        messagebox.showinfo('안내창', f'{value}')\r\n        tk_window.destroy()\r\n\r\n    # 주제, 내용으로 서버에 데이터 전송\r\n    def send_msg(self, head, value):\r\n        msg = json.dumps([head, value])\r\n        self.sock.sendall(msg.encode())\r\n        self.p_msg('보낸 메시지:', msg)\r\n\r\n    # 메시지 종류, 내용을 매개 변수로 콘솔에 확인 내용 출력\r\n    def p_msg(self, head, *msg):\r\n        # 단순히 보기 편하게 할려고 만든 조건\r\n        if msg:\r\n            print(f'{datetime.now()} / {head} {msg}')\r\n        else:\r\n            print(f'{datetime.now()} / {head}')\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    app = QApplication(sys.argv)\r\n    myWindow = WindowClass()\r\n    myWindow.show()\r\n    app.exec_()
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/jyw_teacher.py b/jyw_teacher.py
--- a/jyw_teacher.py	(revision d138544351d7c79df121755491419dcd7f579f09)
+++ b/jyw_teacher.py	(date 1675998546166)
@@ -261,7 +261,7 @@
         self.atw_q.setRowCount(0)
 
 ###########################################################################
-# 도구 메서드
+# 도구 메서드 #
 ###########################################################################
 
     # tkinter 를 이용한 messagbox 송출
Index: jyw_server.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import pymysql as p\r\nimport socketserver\r\nfrom datetime import datetime\r\nimport json\r\n\r\nserver_ip = 'localhost'\r\nserver_port = 9000\r\n\r\ndb_host = '10.10.21.105'\r\ndb_port = 3306\r\ndb_user = 'network'\r\ndb_pw = 'aaaa'\r\ndb = 'api'\r\n\r\n\r\n# DB에 값을 변경하거나 불러오는 함수\r\ndef db_execute(sql):\r\n    conn = p.connect(host=db_host, port=db_port, user=db_user, password=db_pw, db=db, charset='utf8')\r\n    c = conn.cursor()\r\n    c.execute(sql)\r\n    conn.commit()\r\n    conn.close()\r\n    return c.fetchall()\r\n\r\n\r\n# 소켓 연결 요청 처리\r\nclass TH(socketserver.BaseRequestHandler):\r\n    def handle(self):\r\n        c_sock = self.request\r\n        if c_sock not in server.c_socks:\r\n            server.c_socks.append(c_sock)\r\n        server.p_msg(c_sock, '연결됨')\r\n        server.receive(c_sock)\r\n\r\n\r\n# 소켓 객체 생성\r\nclass TTS(socketserver.ThreadingMixIn, socketserver.TCPServer):\r\n    pass\r\n\r\n\r\n# 메인서버\r\nclass Server:\r\n    def __init__(self):\r\n        self.c_socks = []\r\n        self.admin_socks = []\r\n        self.student_socks = []\r\n\r\n###########################################################################\r\n# 스레드 객체\r\n###########################################################################\r\n\r\n    # 수신 메서드 ,클라 연결 종료시 종료 메시지 남기고 연결 소켓 제거\r\n    def receive(self, c):\r\n        while True:\r\n            try:\r\n                rmsg = json.loads(c.recv(1024).decode())\r\n                if rmsg:\r\n                    self.p_msg(c, '받은 메시지:', rmsg)\r\n                    self.reaction(c, rmsg[0], rmsg[1])\r\n            except ConnectionResetError:\r\n                self.p_msg(c, '연결 종료')\r\n                self.c_socks.remove(c)\r\n                print('연결된 클라: ', len(self.c_socks))\r\n                if c in self.student_socks:\r\n                    self.student_socks.remove(c)\r\n                    print('연결된 학생: ', len(self.student_socks))\r\n                if c in self.admin_socks:\r\n                    self.admin_socks.remove(c)\r\n                    print('연결된 선생: ', len(self.student_socks))\r\n                c.close()\r\n                break\r\n            else:\r\n                continue\r\n\r\n    # 반응 메서드\r\n    def reaction(self, c, head, msg):\r\n        print(head, msg)\r\n        # 로그인\r\n        if head == 'login':\r\n            sql = f\"select * from login_data where member_num = '{msg[0]}' and authority = '{msg[1]}' and member_name='{msg[2]}';\"\r\n            login = db_execute(sql)\r\n            # 클라에서 받은 정보가 DB에 등록 되어 있는경우\r\n            if login:\r\n                # DB에 저장된 문제 등록 목록 및 정보 클라에 전달\r\n                # [로그인성공여부, 회원코드, 회원이름, 문제등록번호목록]\r\n                sql = f\"select distinct quiz_num from quiz;\"\r\n                quiz_num = db_execute(sql)\r\n                self.send_msg(c, 'login', ['success', msg[0], msg[2], quiz_num])\r\n                # 정보를 선생과 학생으로 구분하여 전송하기위해 list에 소켓 저장\r\n                if msg[1] == '관리자':\r\n                    self.admin_socks.append(c)\r\n                    print('현재연결된선생소켓', self.admin_socks)\r\n                elif msg[1] == '학생':\r\n                    self.student_socks.append(c)\r\n                    print('현재연결된학생소켓',self.student_socks)\r\n            # 학생 또는 선생 프로그램에서 다른 권한의 계정으로 로그인 시도한 경우\r\n            # 로그인 정보가 틀린경우\r\n            else:\r\n                self.send_msg(c, 'login', ['failure'])\r\n        # 회원가입\r\n        elif head == 'signup':\r\n            # 관리자 권한 가입 정보 DB에 저장 및 정보 전송 [성공여부, 회원 코드]\r\n            if msg[0] == '관리자':\r\n                # 회원 코드를 생성하기위해 번호조회\r\n                sql = \"select count(*) from login_data where member_num like 'a%';\"\r\n                num = int(db_execute(sql)[0][0])+1\r\n                # DB에 회원 정보 등록[회원코드, 권한, 이름]\r\n                sql = f\"insert into login_data values('a{num}', '{msg[0]}', '{msg[1]}')\"\r\n                db_execute(sql)\r\n                self.send_msg(c, 'signup', ['success', f'a{num}'])\r\n            # 학생 권한 가입 정보 DB에 저장 및 정보 전송 [성공여부, 회원 코드]\r\n            else:\r\n                # 회원 코드를 생성하기위해 번호조회\r\n                sql = \"select count(*) from login_data where member_num like 's%';\"\r\n                num = int(db_execute(sql)[0][0])+1\r\n                # DB에 회원 정보 등록[회원코드, 권한, 이름]\r\n                sql = f\"insert into login_data values('s{num}', '{msg[0]}','{msg[1]}')\"\r\n                db_execute(sql)\r\n                # 회원관리 DB에 신규 등록\r\n                sql = f\"insert into study_progress values('F','{msg[1]}', '0', '0');\"\r\n                db_execute(sql)\r\n                self.send_msg(c, 'signup', ['success', f's{num}'])\r\n                for client in self.admin_socks:\r\n                    self.send_msg(client, 'add_alw_user', [f's{num}', f'{msg[1]}'])\r\n\r\n        # ``` 문제 만들기\r\n        # 문제 등록하기\r\n        elif head == 'register_question':\r\n            sql = \"select count(distinct quiz_num) from quiz;\"\r\n            quiz_num = db_execute(sql)[0][0]\r\n            # 신규 문제\r\n            if msg[0][0] > quiz_num:\r\n                # 문제 DB에 저장\r\n                for v in msg:\r\n                    sql = f\"insert into quiz values('{v[0]}', '{v[1]}', '{v[2]}', '{v[3]}', '{v[4]}');\"\r\n                    db_execute(sql)\r\n                # 관리자 권한을 가진 모든 클라에게 전송 [추가 등록된 문제 등록 번호]\r\n                for administrator in self.admin_socks:\r\n                    self.send_msg(administrator, 'add_acb_num', msg[0][0])\r\n            # 기존 문제 수정\r\n            else:\r\n                sql = f\"delete from quiz where quiz_num = {msg[0][0]};\"\r\n                db_execute(sql)\r\n                for v in msg:\r\n                    sql = f\"insert into quiz values('{v[0]}', '{v[1]}', '{v[2]}', '{v[3]}', '{v[4]}');\"\r\n                    db_execute(sql)\r\n        # 해당 등록 번호의 문제 목록 클라에 전송\r\n        elif head == 'load_quiz':\r\n            sql = f\"select * from quiz where quiz_num= '{msg}'\"\r\n            quiz_list = db_execute(sql)\r\n            self.send_msg(c, 'load_quiz', quiz_list)\r\n        # ```\r\n        # ``` 학생 관리\r\n        elif head == 'management':\r\n            sql = \"select member_num ,member_name from login_data where member_num like 's%';\"\r\n            user_infor = db_execute(sql)\r\n            self.send_msg(c, 'management', user_infor)\r\n        elif head == 'study':\r\n            sql = f\"select quiz_num, min(student_name), sum(quiz_point) as sum from quiz_student\" \\\r\n                  f\" where student_name = '{msg}' group by quiz_num;\"\r\n            user_infor = db_execute(sql)\r\n            sql = f\"select * from quiz_student where student_name = '{msg}' order by quiz_num;\"\r\n            more_infor = db_execute(sql)\r\n            if user_infor:\r\n                self.send_msg(c, 'study', [user_infor, more_infor])\r\n            else:\r\n                self.send_msg(c, 'study', 'False')\r\n\r\n        #####장은희\r\n        # 실시간 상담 (학생프로그램)\r\n        elif head == 'st_chat':\r\n            member_num = msg[0]\r\n            member_name = msg[1]\r\n            chat_time = msg[2]\r\n            chat_msg = msg[3]\r\n            sql = f\"insert into chatlog values \\\r\n                  ('{member_num}','{member_name}','{chat_time}','{chat_msg}')\"\r\n            db_execute(sql)\r\n            st_chat_list = [member_num, member_name, msg[4], chat_msg]\r\n            self.send_msg(c, 'st_chat', st_chat_list)\r\n            # 관리자 권한을 가진 모든 클라에게 전송\r\n            for admin in self.admin_socks:\r\n                self.send_msg(admin, 'st_chat', st_chat_list)\r\n\r\n            sql = f\"select disticnt * from chatlog \"\r\n\r\n        # 실시간 상담 (관리자프로그램)\r\n        elif head == 'at_chat':\r\n            member_num = msg[0]\r\n            member_name = msg[1]\r\n            chat_time = msg[2]\r\n            chat_msg = msg[3]\r\n            sql = f\"insert into chatlog values \\\r\n                  ('{member_num}','{member_name}','{chat_time}','{chat_msg}')\"\r\n            db_execute(sql)\r\n            at_chat_list = [member_num, member_name, msg[4], chat_msg]\r\n            self.send_msg(c, 'at_chat', at_chat_list)\r\n            # 학생 클라에게 전송\r\n            for student in self.student_socks:\r\n                self.send_msg(student, 'at_chat', at_chat_list)\r\n\r\n\r\n\r\n###########################################################################\r\n# 도구 메서드\r\n###########################################################################\r\n\r\n    # 클라소켓, 주제, 내용으로 클라에 데이터 전송\r\n    def send_msg(self, c, head, value):\r\n        msg = json.dumps([head, value])\r\n        print('서버 전송 바이트: ', len(msg))\r\n        # 전송 데인터의 처음 10바이트를 전송 길이정보를 넣어 전송\r\n        msg = f\"{len(msg):<10}\"+msg\r\n        c.sendall(msg.encode())\r\n        self.p_msg(c, '보낸 메시지:', value)\r\n\r\n    # 클라소켓, 메시지 종류, 내용을 매개 변수로 콘솔에 확인 내용 출력\r\n    def p_msg(self, sock, head, *msg):\r\n        # 단순히 보기 편하게 할려고 만든 조건\r\n        if msg:\r\n            print(f'{datetime.now()} / {sock.getpeername()} / {head} {msg}')\r\n        else:\r\n            print(f'{datetime.now()} / {sock.getpeername()} / {head}')\r\n\r\n\r\nif __name__ == '__main__':\r\n    server = Server()\r\n    with TTS((server_ip, server_port), TH) as TS:\r\n        TS.serve_forever()\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/jyw_server.py b/jyw_server.py
--- a/jyw_server.py	(revision d138544351d7c79df121755491419dcd7f579f09)
+++ b/jyw_server.py	(date 1675998546165)
@@ -46,7 +46,7 @@
         self.student_socks = []
 
 ###########################################################################
-# 스레드 객체
+# 스레드 객체 #
 ###########################################################################
 
     # 수신 메서드 ,클라 연결 종료시 종료 메시지 남기고 연결 소켓 제거
Index: eh_teacher.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import json\r\nimport sys\r\nfrom tkinter import messagebox, Tk\r\nfrom PyQt5.QtWidgets import *\r\nfrom PyQt5 import uic\r\nimport socket\r\nimport threading\r\nfrom datetime import datetime\r\n\r\nform_class = uic.loadUiType(\"main.ui\")[0]\r\nsvrip = 'localhost'\r\nport = 9000\r\n\r\n\r\nclass WindowClass(QMainWindow, form_class):\r\n    def __init__(self):\r\n        super().__init__()\r\n        self.setupUi(self)\r\n        self.stackedWidget.setCurrentIndex(0)\r\n\r\n        #장은희테스트\r\n        self.atw.setCurrentIndex(2)\r\n        self.ale_chat.returnPressed.connect(self.at_chat) # 실시간상담채팅\r\n\r\n        # 시그널 - 메서드\r\n        # 로그인, 회원가입\r\n        self.hbt_add.clicked.connect(self.signup)\r\n        self.hbt_login.clicked.connect(self.login)\r\n        # 문제 만들기\r\n        self.abt_add.clicked.connect(self.add_space)\r\n        self.abt_del.clicked.connect(self.del_space)\r\n        self.abt_finish.clicked.connect(self.register_question)\r\n        self.abt_cancel.clicked.connect(self.del_atw_q)\r\n        self.atw_q.currentCellChanged.connect(self.total_score)\r\n        self.acb_num.currentIndexChanged.connect(self.send_quiz_num)\r\n        # 학생관리\r\n        self.atw.currentChanged.connect(self.atw_move)\r\n\r\n        # 서버 연결\r\n        self.sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\r\n        self.sock.connect((svrip, port))\r\n        self.p_msg('연결된 서버: ', svrip)\r\n        th = threading.Thread(target=self.receive, args=(self.sock,), daemon=True)\r\n        th.start()\r\n\r\n    # 수신 메서드\r\n    def receive(self, c):\r\n        while True:\r\n            rmsg = json.loads(c.recv(1024).decode())\r\n            if rmsg:\r\n                self.p_msg('받은 메시지:', rmsg)\r\n                self.reaction(rmsg[0], rmsg[1])\r\n\r\n    # 반응 메서드\r\n    def reaction(self, head, msg):\r\n        print(head, msg)\r\n        # 로그인\r\n        if head == 'login':\r\n            # 로그인 성공\r\n            if msg[0] == 'success':\r\n                # 나중에 쓸수도 있기에 만든 변수\r\n                self.code = msg[1]\r\n                self.name = msg[2]\r\n                # 관리자 페이지 이동\r\n                self.stackedWidget.setCurrentIndex(2)\r\n                # 문제 등록 번호 콤보박스에 등록\r\n                for i in msg[3]:\r\n                    self.acb_num.addItem(str(i[0]))\r\n                self.messagebox('로그인 성공')\r\n            # 로그인 실패\r\n            else:\r\n                self.messagebox('로그인 실패')\r\n        # 회원가입\r\n        elif head == 'signup':\r\n            # 가입 성공 및 회원 코드 띄우기\r\n            if msg[0] == 'success':\r\n                code = msg[1]\r\n                self.messagebox(f'가입 성공, 발급 코드: {code} 입니다.')\r\n            # 가입 실패 코드 띄우기\r\n            else:\r\n                self.messagebox('가입 실패')\r\n        # ``` 문제 만들기\r\n        # 테이블 위젯에 문제 띄우기\r\n        elif head == 'load_quiz':\r\n            # 테이블 위젯 셋팅\r\n            self.atw_q.setRowCount(0)\r\n            self.atw_q.setRowCount(len(msg))\r\n            # 테이블 위젯 셀에 내용 저장\r\n            for row, quiz_list in enumerate(msg):\r\n                for col, value in enumerate(quiz_list):\r\n                    if col != 0:\r\n                        self.atw_q.setItem(row, col-1, QTableWidgetItem(value))\r\n        # 추가된 문제 등록번호 콤보박스에 저장\r\n        elif head == 'add_acb_num':\r\n            self.acb_num.addItem(str(msg))\r\n        # ```\r\n        #####장은희\r\n        # 실시간 상담 (학생->선생님)\r\n        elif head == 'st_chat':\r\n            if self.hle_code.text() == msg[0]:\r\n                self.alw_chat.addItem(f\"{msg[1]}({msg[2]}) : {msg[3]}\")\r\n                self.alw_chat.scrollToBottom()\r\n        # 실시간 상담 (자기자신)\r\n        elif head == 'at_chat':\r\n            self.alw_chat.addItem(f\"{msg[1]}({msg[2]}) : {msg[3]}\")\r\n\r\n###########################################################################\r\n# 송신\r\n###########################################################################\r\n\r\n    # 로그인 (선생 프로그램으로 서버에 [선생 코드, 권한, 이름] 전송)\r\n    def login(self):\r\n        code = self.hle_code.text()\r\n        name = self.hle_name.text()\r\n        if code and name:\r\n            self.send_msg('login', [code, '관리자', name])\r\n        else:\r\n            self.messagebox('로그인 실패')\r\n        self.hle_code.clear()\r\n        self.hle_name.clear()\r\n\r\n    # 회원 가입 (선생, 학생 프로그램 상관없이 서버에 [권한, 이름] 전송)\r\n    def signup(self):\r\n        name = self.hle_add_name.text().split()[0]\r\n        admin = self.hrb_admin.isChecked()\r\n        user = self.hrb_user.isChecked()\r\n        if name:\r\n            if admin:\r\n                self.send_msg('signup', ['관리자', name])\r\n            elif user:\r\n                self.send_msg('signup', ['학생', name])\r\n            self.hle_add_name.clear()\r\n\r\n    # 문제 등록 (서버에 [문제 목록] 전송)\r\n    def register_question(self):\r\n        # 콤보 박스 내용이 숫자가 아닌경우 신규 문제 등록\r\n        try:\r\n            box = int(self.acb_num.currentText())\r\n        except ValueError:\r\n            box = self.acb_num.count()\r\n        # 초기 셋팅\r\n        t_list = []\r\n        row = self.atw_q.rowCount()\r\n        col = self.atw_q.columnCount()\r\n        # 테이블 위젯의 셀 내용 list에 저장하기\r\n        try:\r\n            for i in range(row):\r\n                q_list = [box]\r\n                for j in range(col):\r\n                    if j < 2:\r\n                        q_list.append(self.atw_q.item(i, j).text())\r\n                    else:\r\n                        q_list.append(int(self.atw_q.item(i, j).text()))\r\n                t_list.append(q_list)\r\n            # 등록할 문제 목록의 배점 합계가 100점인지 여부 확인\r\n            score = int(self.al_score.text())\r\n            if score == 100:\r\n                self.send_msg('register_question', t_list)\r\n                self.atw_q.clearContents()\r\n                self.atw_q.setRowCount(0)\r\n                self.al_score.setNum(0)\r\n            else:\r\n                self.messagebox('만점은 100 입니다.')\r\n        # 작성된 문제 목록에 문제가 있는경우\r\n        except ValueError:\r\n            self.messagebox('배점 또는 point란에 문자가 있습니다.')\r\n        except AttributeError:\r\n            self.messagebox('빈칸이 있습니다.')\r\n\r\n    # 문제 등록 넘버를 서버로 송신\r\n    def send_quiz_num(self):\r\n        num = self.acb_num.currentText()\r\n        self.send_msg('load_quiz', num)\r\n\r\n    def atw_move(self):\r\n        tab = self.atw.currentIndex()\r\n        if tab == 1:\r\n            self.send_msg('management', '')\r\n\r\n    #####장은희\r\n    # 상담 (관리자 프로그램으로 서버에 [관리자코드, 관리자이름, 채팅시간, 채팅내용] 전송)\r\n    def at_chat(self):\r\n        chat_time = str(datetime.now()) #strftime(\"%Y-%m-%d %H:%M:%S\")\r\n        time = datetime.now().strftime(\"%H:%M\")\r\n        chat_msg = self.ale_chat.text()\r\n        # self.alw_chat.addItem(f\"{self.name}({time}) : {chat_msg}\")\r\n        if chat_msg and chat_time:\r\n            self.send_msg('at_chat', [self.code, self.name, chat_time, chat_msg, time])\r\n        self.alw_chat.scrollToBottom()\r\n        self.ale_chat.clear()\r\n\r\n\r\n###########################################################################\r\n# 송신 기능이 없는 시그널 - 메서드\r\n###########################################################################\r\n\r\n    # 문제목록에 문제 추가 하기\r\n    def add_space(self):\r\n        num = self.atw_q.rowCount()\r\n        self.atw_q.setRowCount(num+1)\r\n\r\n    # 문제목록에 문제 삭제 하기\r\n    def del_space(self):\r\n        max_num = self.atw_q.rowCount()\r\n        num = self.atw_q.currentRow()\r\n        # 테이블 위젯의 선택한 셀이 없는 경우\r\n        if num < 0:\r\n            num = max_num-1\r\n        # 테이블 위젯의 특정 셀의 행 지우기\r\n        self.atw_q.removeRow(num)\r\n\r\n    # 선택셀 변경시 배점 총합을 라벨에 출력\r\n    def total_score(self):\r\n        row = self.atw_q.rowCount()\r\n        score = 0\r\n        # 작성중 계속 시그널이 들어오는 함수로 애러 발생을 pass 처리\r\n        try:\r\n            for i in range(row):\r\n                score += int(self.atw_q.item(i, 2).text())\r\n            self.al_score.setNum(score)\r\n        except AttributeError:\r\n            pass\r\n        except ValueError:\r\n            pass\r\n\r\n    # 문제목록의 내용 전부 삭제\r\n    def del_atw_q(self):\r\n        self.atw_q.clearContents()\r\n        self.atw_q.setRowCount(0)\r\n\r\n###########################################################################\r\n# 도구 메서드\r\n###########################################################################\r\n\r\n    # tkinter 를 이용한 messagbox 송출\r\n    def messagebox(self, value):\r\n        tk_window = Tk()\r\n        tk_window.geometry(\"0x0+3000+6000\")\r\n        messagebox.showinfo('안내창', f'{value}')\r\n        tk_window.destroy()\r\n\r\n    # 주제, 내용으로 서버에 데이터 전송\r\n    def send_msg(self, head, value):\r\n        msg = json.dumps([head, value])\r\n        self.sock.sendall(msg.encode())\r\n        self.p_msg('보낸 메시지:', msg)\r\n\r\n    # 메시지 종류, 내용을 매개 변수로 콘솔에 확인 내용 출력\r\n    def p_msg(self, head, *msg):\r\n        # 단순히 보기 편하게 할려고 만든 조건\r\n        if msg:\r\n            print(f'{datetime.now()} / {head} {msg}')\r\n        else:\r\n            print(f'{datetime.now()} / {head}')\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    app = QApplication(sys.argv)\r\n    myWindow = WindowClass()\r\n    myWindow.show()\r\n    app.exec_()
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/eh_teacher.py b/eh_teacher.py
--- a/eh_teacher.py	(revision d138544351d7c79df121755491419dcd7f579f09)
+++ b/eh_teacher.py	(date 1675998546163)
@@ -6,7 +6,7 @@
 import socket
 import threading
 from datetime import datetime
-
+#
 form_class = uic.loadUiType("main.ui")[0]
 svrip = 'localhost'
 port = 9000
Index: main.ui
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<ui version=\"4.0\">\r\n <class>MainWindow</class>\r\n <widget class=\"QMainWindow\" name=\"MainWindow\">\r\n  <property name=\"geometry\">\r\n   <rect>\r\n    <x>0</x>\r\n    <y>0</y>\r\n    <width>800</width>\r\n    <height>600</height>\r\n   </rect>\r\n  </property>\r\n  <property name=\"windowTitle\">\r\n   <string>MainWindow</string>\r\n  </property>\r\n  <widget class=\"QWidget\" name=\"centralwidget\">\r\n   <widget class=\"QStackedWidget\" name=\"stackedWidget\">\r\n    <property name=\"geometry\">\r\n     <rect>\r\n      <x>0</x>\r\n      <y>0</y>\r\n      <width>801</width>\r\n      <height>561</height>\r\n     </rect>\r\n    </property>\r\n    <property name=\"currentIndex\">\r\n     <number>0</number>\r\n    </property>\r\n    <widget class=\"QWidget\" name=\"page\">\r\n     <widget class=\"QLineEdit\" name=\"hle_code\">\r\n      <property name=\"geometry\">\r\n       <rect>\r\n        <x>360</x>\r\n        <y>200</y>\r\n        <width>113</width>\r\n        <height>20</height>\r\n       </rect>\r\n      </property>\r\n     </widget>\r\n     <widget class=\"QPushButton\" name=\"hbt_login\">\r\n      <property name=\"geometry\">\r\n       <rect>\r\n        <x>490</x>\r\n        <y>200</y>\r\n        <width>75</width>\r\n        <height>51</height>\r\n       </rect>\r\n      </property>\r\n      <property name=\"text\">\r\n       <string> 로그인</string>\r\n      </property>\r\n     </widget>\r\n     <widget class=\"QLabel\" name=\"label\">\r\n      <property name=\"geometry\">\r\n       <rect>\r\n        <x>300</x>\r\n        <y>200</y>\r\n        <width>56</width>\r\n        <height>20</height>\r\n       </rect>\r\n      </property>\r\n      <property name=\"text\">\r\n       <string>CODE :</string>\r\n      </property>\r\n     </widget>\r\n     <widget class=\"Line\" name=\"line_6\">\r\n      <property name=\"geometry\">\r\n       <rect>\r\n        <x>210</x>\r\n        <y>150</y>\r\n        <width>421</width>\r\n        <height>20</height>\r\n       </rect>\r\n      </property>\r\n      <property name=\"orientation\">\r\n       <enum>Qt::Horizontal</enum>\r\n      </property>\r\n     </widget>\r\n     <widget class=\"Line\" name=\"line_8\">\r\n      <property name=\"geometry\">\r\n       <rect>\r\n        <x>200</x>\r\n        <y>160</y>\r\n        <width>20</width>\r\n        <height>271</height>\r\n       </rect>\r\n      </property>\r\n      <property name=\"orientation\">\r\n       <enum>Qt::Vertical</enum>\r\n      </property>\r\n     </widget>\r\n     <widget class=\"Line\" name=\"line_7\">\r\n      <property name=\"geometry\">\r\n       <rect>\r\n        <x>210</x>\r\n        <y>290</y>\r\n        <width>421</width>\r\n        <height>20</height>\r\n       </rect>\r\n      </property>\r\n      <property name=\"orientation\">\r\n       <enum>Qt::Horizontal</enum>\r\n      </property>\r\n     </widget>\r\n     <widget class=\"Line\" name=\"line_9\">\r\n      <property name=\"geometry\">\r\n       <rect>\r\n        <x>621</x>\r\n        <y>160</y>\r\n        <width>20</width>\r\n        <height>271</height>\r\n       </rect>\r\n      </property>\r\n      <property name=\"orientation\">\r\n       <enum>Qt::Vertical</enum>\r\n      </property>\r\n     </widget>\r\n     <widget class=\"QLabel\" name=\"label_2\">\r\n      <property name=\"geometry\">\r\n       <rect>\r\n        <x>300</x>\r\n        <y>230</y>\r\n        <width>56</width>\r\n        <height>20</height>\r\n       </rect>\r\n      </property>\r\n      <property name=\"text\">\r\n       <string>이름 :</string>\r\n      </property>\r\n     </widget>\r\n     <widget class=\"QLineEdit\" name=\"hle_name\">\r\n      <property name=\"geometry\">\r\n       <rect>\r\n        <x>360</x>\r\n        <y>230</y>\r\n        <width>113</width>\r\n        <height>20</height>\r\n       </rect>\r\n      </property>\r\n      <property name=\"text\">\r\n       <string/>\r\n      </property>\r\n     </widget>\r\n     <widget class=\"Line\" name=\"line_10\">\r\n      <property name=\"geometry\">\r\n       <rect>\r\n        <x>210</x>\r\n        <y>420</y>\r\n        <width>421</width>\r\n        <height>20</height>\r\n       </rect>\r\n      </property>\r\n      <property name=\"orientation\">\r\n       <enum>Qt::Horizontal</enum>\r\n      </property>\r\n     </widget>\r\n     <widget class=\"QPushButton\" name=\"hbt_add\">\r\n      <property name=\"geometry\">\r\n       <rect>\r\n        <x>490</x>\r\n        <y>310</y>\r\n        <width>75</width>\r\n        <height>51</height>\r\n       </rect>\r\n      </property>\r\n      <property name=\"text\">\r\n       <string>등록</string>\r\n      </property>\r\n     </widget>\r\n     <widget class=\"QLineEdit\" name=\"hle_add_name\">\r\n      <property name=\"geometry\">\r\n       <rect>\r\n        <x>360</x>\r\n        <y>330</y>\r\n        <width>113</width>\r\n        <height>20</height>\r\n       </rect>\r\n      </property>\r\n      <property name=\"text\">\r\n       <string/>\r\n      </property>\r\n     </widget>\r\n     <widget class=\"QLabel\" name=\"label_3\">\r\n      <property name=\"geometry\">\r\n       <rect>\r\n        <x>300</x>\r\n        <y>330</y>\r\n        <width>56</width>\r\n        <height>20</height>\r\n       </rect>\r\n      </property>\r\n      <property name=\"text\">\r\n       <string>이름 :</string>\r\n      </property>\r\n     </widget>\r\n     <widget class=\"QRadioButton\" name=\"hrb_admin\">\r\n      <property name=\"geometry\">\r\n       <rect>\r\n        <x>340</x>\r\n        <y>390</y>\r\n        <width>90</width>\r\n        <height>16</height>\r\n       </rect>\r\n      </property>\r\n      <property name=\"text\">\r\n       <string>관리자</string>\r\n      </property>\r\n      <property name=\"checked\">\r\n       <bool>true</bool>\r\n      </property>\r\n     </widget>\r\n     <widget class=\"QRadioButton\" name=\"hrb_user\">\r\n      <property name=\"geometry\">\r\n       <rect>\r\n        <x>450</x>\r\n        <y>390</y>\r\n        <width>90</width>\r\n        <height>16</height>\r\n       </rect>\r\n      </property>\r\n      <property name=\"text\">\r\n       <string>학생</string>\r\n      </property>\r\n     </widget>\r\n    </widget>\r\n    <widget class=\"QWidget\" name=\"page_2\">\r\n     <widget class=\"QTabWidget\" name=\"stw\">\r\n      <property name=\"geometry\">\r\n       <rect>\r\n        <x>0</x>\r\n        <y>0</y>\r\n        <width>801</width>\r\n        <height>561</height>\r\n       </rect>\r\n      </property>\r\n      <property name=\"currentIndex\">\r\n       <number>4</number>\r\n      </property>\r\n      <widget class=\"QWidget\" name=\"tab\">\r\n       <attribute name=\"title\">\r\n        <string>home</string>\r\n       </attribute>\r\n       <widget class=\"QLabel\" name=\"label_4\">\r\n        <property name=\"geometry\">\r\n         <rect>\r\n          <x>130</x>\r\n          <y>30</y>\r\n          <width>56</width>\r\n          <height>30</height>\r\n         </rect>\r\n        </property>\r\n        <property name=\"font\">\r\n         <font>\r\n          <family>Arial</family>\r\n          <pointsize>12</pointsize>\r\n         </font>\r\n        </property>\r\n        <property name=\"text\">\r\n         <string>이름 :</string>\r\n        </property>\r\n       </widget>\r\n       <widget class=\"QLabel\" name=\"sl_h_name\">\r\n        <property name=\"geometry\">\r\n         <rect>\r\n          <x>180</x>\r\n          <y>30</y>\r\n          <width>56</width>\r\n          <height>30</height>\r\n         </rect>\r\n        </property>\r\n        <property name=\"font\">\r\n         <font>\r\n          <family>Arial</family>\r\n          <pointsize>12</pointsize>\r\n         </font>\r\n        </property>\r\n        <property name=\"text\">\r\n         <string>name</string>\r\n        </property>\r\n       </widget>\r\n       <widget class=\"QLCDNumber\" name=\"slcd_h_point\">\r\n        <property name=\"geometry\">\r\n         <rect>\r\n          <x>360</x>\r\n          <y>30</y>\r\n          <width>111</width>\r\n          <height>31</height>\r\n         </rect>\r\n        </property>\r\n       </widget>\r\n       <widget class=\"QLabel\" name=\"label_6\">\r\n        <property name=\"geometry\">\r\n         <rect>\r\n          <x>310</x>\r\n          <y>30</y>\r\n          <width>56</width>\r\n          <height>30</height>\r\n         </rect>\r\n        </property>\r\n        <property name=\"font\">\r\n         <font>\r\n          <family>Arial</family>\r\n          <pointsize>12</pointsize>\r\n         </font>\r\n        </property>\r\n        <property name=\"text\">\r\n         <string>point :</string>\r\n        </property>\r\n       </widget>\r\n       <widget class=\"QLabel\" name=\"label_7\">\r\n        <property name=\"geometry\">\r\n         <rect>\r\n          <x>530</x>\r\n          <y>30</y>\r\n          <width>56</width>\r\n          <height>30</height>\r\n         </rect>\r\n        </property>\r\n        <property name=\"font\">\r\n         <font>\r\n          <family>Arial</family>\r\n          <pointsize>12</pointsize>\r\n         </font>\r\n        </property>\r\n        <property name=\"text\">\r\n         <string>등급 :</string>\r\n        </property>\r\n       </widget>\r\n       <widget class=\"Line\" name=\"line_11\">\r\n        <property name=\"geometry\">\r\n         <rect>\r\n          <x>5</x>\r\n          <y>80</y>\r\n          <width>781</width>\r\n          <height>20</height>\r\n         </rect>\r\n        </property>\r\n        <property name=\"orientation\">\r\n         <enum>Qt::Horizontal</enum>\r\n        </property>\r\n       </widget>\r\n       <widget class=\"QLabel\" name=\"sl_h_rating\">\r\n        <property name=\"geometry\">\r\n         <rect>\r\n          <x>590</x>\r\n          <y>30</y>\r\n          <width>56</width>\r\n          <height>30</height>\r\n         </rect>\r\n        </property>\r\n        <property name=\"font\">\r\n         <font>\r\n          <family>Arial</family>\r\n          <pointsize>22</pointsize>\r\n         </font>\r\n        </property>\r\n        <property name=\"text\">\r\n         <string>F</string>\r\n        </property>\r\n       </widget>\r\n       <widget class=\"Line\" name=\"line_12\">\r\n        <property name=\"geometry\">\r\n         <rect>\r\n          <x>385</x>\r\n          <y>90</y>\r\n          <width>20</width>\r\n          <height>441</height>\r\n         </rect>\r\n        </property>\r\n        <property name=\"orientation\">\r\n         <enum>Qt::Vertical</enum>\r\n        </property>\r\n       </widget>\r\n       <widget class=\"QTableWidget\" name=\"stw_h_score\">\r\n        <property name=\"geometry\">\r\n         <rect>\r\n          <x>410</x>\r\n          <y>100</y>\r\n          <width>371</width>\r\n          <height>421</height>\r\n         </rect>\r\n        </property>\r\n       </widget>\r\n       <widget class=\"QTableWidget\" name=\"stw_h_progress\">\r\n        <property name=\"geometry\">\r\n         <rect>\r\n          <x>10</x>\r\n          <y>100</y>\r\n          <width>371</width>\r\n          <height>421</height>\r\n         </rect>\r\n        </property>\r\n       </widget>\r\n      </widget>\r\n      <widget class=\"QWidget\" name=\"tab_2\">\r\n       <attribute name=\"title\">\r\n        <string>학습</string>\r\n       </attribute>\r\n       <widget class=\"QTableWidget\" name=\"stw_contents\">\r\n        <property name=\"geometry\">\r\n         <rect>\r\n          <x>10</x>\r\n          <y>120</y>\r\n          <width>771</width>\r\n          <height>401</height>\r\n         </rect>\r\n        </property>\r\n        <property name=\"sizeAdjustPolicy\">\r\n         <enum>QAbstractScrollArea::AdjustIgnored</enum>\r\n        </property>\r\n        <property name=\"editTriggers\">\r\n         <set>QAbstractItemView::NoEditTriggers</set>\r\n        </property>\r\n        <attribute name=\"horizontalHeaderCascadingSectionResizes\">\r\n         <bool>false</bool>\r\n        </attribute>\r\n        <attribute name=\"horizontalHeaderStretchLastSection\">\r\n         <bool>true</bool>\r\n        </attribute>\r\n        <attribute name=\"verticalHeaderCascadingSectionResizes\">\r\n         <bool>false</bool>\r\n        </attribute>\r\n        <attribute name=\"verticalHeaderHighlightSections\">\r\n         <bool>false</bool>\r\n        </attribute>\r\n        <column>\r\n         <property name=\"text\">\r\n          <string>번호</string>\r\n         </property>\r\n        </column>\r\n        <column>\r\n         <property name=\"text\">\r\n          <string>연도</string>\r\n         </property>\r\n        </column>\r\n        <column>\r\n         <property name=\"text\">\r\n          <string>내용</string>\r\n         </property>\r\n        </column>\r\n       </widget>\r\n       <widget class=\"Line\" name=\"line_13\">\r\n        <property name=\"geometry\">\r\n         <rect>\r\n          <x>10</x>\r\n          <y>90</y>\r\n          <width>771</width>\r\n          <height>20</height>\r\n         </rect>\r\n        </property>\r\n        <property name=\"orientation\">\r\n         <enum>Qt::Horizontal</enum>\r\n        </property>\r\n       </widget>\r\n       <widget class=\"QComboBox\" name=\"comboBox\">\r\n        <property name=\"geometry\">\r\n         <rect>\r\n          <x>320</x>\r\n          <y>50</y>\r\n          <width>111</width>\r\n          <height>22</height>\r\n         </rect>\r\n        </property>\r\n       </widget>\r\n       <widget class=\"QLabel\" name=\"label_5\">\r\n        <property name=\"geometry\">\r\n         <rect>\r\n          <x>150</x>\r\n          <y>50</y>\r\n          <width>131</width>\r\n          <height>21</height>\r\n         </rect>\r\n        </property>\r\n        <property name=\"text\">\r\n         <string>연도 선택 </string>\r\n        </property>\r\n       </widget>\r\n       <widget class=\"QPushButton\" name=\"study_save_btn\">\r\n        <property name=\"geometry\">\r\n         <rect>\r\n          <x>650</x>\r\n          <y>20</y>\r\n          <width>121</width>\r\n          <height>31</height>\r\n         </rect>\r\n        </property>\r\n        <property name=\"text\">\r\n         <string>학습내용 저장</string>\r\n        </property>\r\n       </widget>\r\n       <widget class=\"QPushButton\" name=\"load_study_btn\">\r\n        <property name=\"geometry\">\r\n         <rect>\r\n          <x>650</x>\r\n          <y>60</y>\r\n          <width>121</width>\r\n          <height>31</height>\r\n         </rect>\r\n        </property>\r\n        <property name=\"text\">\r\n         <string>학습내용 불러오기</string>\r\n        </property>\r\n       </widget>\r\n      </widget>\r\n      <widget class=\"QWidget\" name=\"tab_3\">\r\n       <attribute name=\"title\">\r\n        <string>문제</string>\r\n       </attribute>\r\n       <widget class=\"QTableView\" name=\"stw_test\">\r\n        <property name=\"geometry\">\r\n         <rect>\r\n          <x>10</x>\r\n          <y>10</y>\r\n          <width>256</width>\r\n          <height>511</height>\r\n         </rect>\r\n        </property>\r\n       </widget>\r\n       <widget class=\"Line\" name=\"line_14\">\r\n        <property name=\"geometry\">\r\n         <rect>\r\n          <x>270</x>\r\n          <y>10</y>\r\n          <width>20</width>\r\n          <height>511</height>\r\n         </rect>\r\n        </property>\r\n        <property name=\"orientation\">\r\n         <enum>Qt::Vertical</enum>\r\n        </property>\r\n       </widget>\r\n       <widget class=\"Line\" name=\"line_15\">\r\n        <property name=\"geometry\">\r\n         <rect>\r\n          <x>280</x>\r\n          <y>320</y>\r\n          <width>501</width>\r\n          <height>20</height>\r\n         </rect>\r\n        </property>\r\n        <property name=\"orientation\">\r\n         <enum>Qt::Horizontal</enum>\r\n        </property>\r\n       </widget>\r\n       <widget class=\"QLabel\" name=\"sl_test\">\r\n        <property name=\"geometry\">\r\n         <rect>\r\n          <x>290</x>\r\n          <y>20</y>\r\n          <width>481</width>\r\n          <height>291</height>\r\n         </rect>\r\n        </property>\r\n        <property name=\"text\">\r\n         <string>문제</string>\r\n        </property>\r\n        <property name=\"alignment\">\r\n         <set>Qt::AlignLeading|Qt::AlignLeft|Qt::AlignTop</set>\r\n        </property>\r\n       </widget>\r\n       <widget class=\"QLineEdit\" name=\"sle_test\">\r\n        <property name=\"geometry\">\r\n         <rect>\r\n          <x>290</x>\r\n          <y>340</y>\r\n          <width>431</width>\r\n          <height>181</height>\r\n         </rect>\r\n        </property>\r\n       </widget>\r\n       <widget class=\"QPushButton\" name=\"sbr_test\">\r\n        <property name=\"geometry\">\r\n         <rect>\r\n          <x>730</x>\r\n          <y>340</y>\r\n          <width>51</width>\r\n          <height>181</height>\r\n         </rect>\r\n        </property>\r\n        <property name=\"text\">\r\n         <string>확인</string>\r\n        </property>\r\n       </widget>\r\n      </widget>\r\n      <widget class=\"QWidget\" name=\"tab_4\">\r\n       <attribute name=\"title\">\r\n        <string>상담</string>\r\n       </attribute>\r\n       <widget class=\"Line\" name=\"line_17\">\r\n        <property name=\"geometry\">\r\n         <rect>\r\n          <x>10</x>\r\n          <y>30</y>\r\n          <width>771</width>\r\n          <height>20</height>\r\n         </rect>\r\n        </property>\r\n        <property name=\"orientation\">\r\n         <enum>Qt::Horizontal</enum>\r\n        </property>\r\n       </widget>\r\n       <widget class=\"QListWidget\" name=\"slw_chat\">\r\n        <property name=\"geometry\">\r\n         <rect>\r\n          <x>10</x>\r\n          <y>50</y>\r\n          <width>771</width>\r\n          <height>471</height>\r\n         </rect>\r\n        </property>\r\n       </widget>\r\n       <widget class=\"QLineEdit\" name=\"sle_chat\">\r\n        <property name=\"geometry\">\r\n         <rect>\r\n          <x>10</x>\r\n          <y>10</y>\r\n          <width>771</width>\r\n          <height>22</height>\r\n         </rect>\r\n        </property>\r\n       </widget>\r\n      </widget>\r\n      <widget class=\"QWidget\" name=\"tab_5\">\r\n       <attribute name=\"title\">\r\n        <string>QnA</string>\r\n       </attribute>\r\n       <widget class=\"QLineEdit\" name=\"sle_qa\">\r\n        <property name=\"geometry\">\r\n         <rect>\r\n          <x>10</x>\r\n          <y>10</y>\r\n          <width>691</width>\r\n          <height>101</height>\r\n         </rect>\r\n        </property>\r\n       </widget>\r\n       <widget class=\"QTableWidget\" name=\"stw_qa\">\r\n        <property name=\"geometry\">\r\n         <rect>\r\n          <x>10</x>\r\n          <y>140</y>\r\n          <width>771</width>\r\n          <height>381</height>\r\n         </rect>\r\n        </property>\r\n       </widget>\r\n       <widget class=\"QPushButton\" name=\"sbt_qa\">\r\n        <property name=\"geometry\">\r\n         <rect>\r\n          <x>710</x>\r\n          <y>10</y>\r\n          <width>75</width>\r\n          <height>101</height>\r\n         </rect>\r\n        </property>\r\n        <property name=\"text\">\r\n         <string>등록</string>\r\n        </property>\r\n       </widget>\r\n       <widget class=\"Line\" name=\"line_16\">\r\n        <property name=\"geometry\">\r\n         <rect>\r\n          <x>10</x>\r\n          <y>120</y>\r\n          <width>771</width>\r\n          <height>20</height>\r\n         </rect>\r\n        </property>\r\n        <property name=\"orientation\">\r\n         <enum>Qt::Horizontal</enum>\r\n        </property>\r\n       </widget>\r\n      </widget>\r\n     </widget>\r\n    </widget>\r\n    <widget class=\"QWidget\" name=\"page_3\">\r\n     <widget class=\"QTabWidget\" name=\"atw\">\r\n      <property name=\"geometry\">\r\n       <rect>\r\n        <x>0</x>\r\n        <y>0</y>\r\n        <width>801</width>\r\n        <height>560</height>\r\n       </rect>\r\n      </property>\r\n      <property name=\"maximumSize\">\r\n       <size>\r\n        <width>801</width>\r\n        <height>560</height>\r\n       </size>\r\n      </property>\r\n      <property name=\"currentIndex\">\r\n       <number>0</number>\r\n      </property>\r\n      <widget class=\"QWidget\" name=\"tab_q\">\r\n       <attribute name=\"title\">\r\n        <string>문제만들기</string>\r\n       </attribute>\r\n       <widget class=\"QPushButton\" name=\"abt_finish\">\r\n        <property name=\"geometry\">\r\n         <rect>\r\n          <x>260</x>\r\n          <y>10</y>\r\n          <width>75</width>\r\n          <height>23</height>\r\n         </rect>\r\n        </property>\r\n        <property name=\"text\">\r\n         <string>등록</string>\r\n        </property>\r\n       </widget>\r\n       <widget class=\"QPushButton\" name=\"abt_del\">\r\n        <property name=\"geometry\">\r\n         <rect>\r\n          <x>180</x>\r\n          <y>10</y>\r\n          <width>75</width>\r\n          <height>23</height>\r\n         </rect>\r\n        </property>\r\n        <property name=\"text\">\r\n         <string>문제 삭제</string>\r\n        </property>\r\n       </widget>\r\n       <widget class=\"QComboBox\" name=\"acb_num\">\r\n        <property name=\"geometry\">\r\n         <rect>\r\n          <x>20</x>\r\n          <y>10</y>\r\n          <width>76</width>\r\n          <height>22</height>\r\n         </rect>\r\n        </property>\r\n        <item>\r\n         <property name=\"text\">\r\n          <string>등록번호</string>\r\n         </property>\r\n        </item>\r\n       </widget>\r\n       <widget class=\"QTableWidget\" name=\"atw_q\">\r\n        <property name=\"geometry\">\r\n         <rect>\r\n          <x>10</x>\r\n          <y>40</y>\r\n          <width>781</width>\r\n          <height>491</height>\r\n         </rect>\r\n        </property>\r\n        <attribute name=\"horizontalHeaderStretchLastSection\">\r\n         <bool>true</bool>\r\n        </attribute>\r\n        <column>\r\n         <property name=\"text\">\r\n          <string>문제</string>\r\n         </property>\r\n        </column>\r\n        <column>\r\n         <property name=\"text\">\r\n          <string>답안</string>\r\n         </property>\r\n        </column>\r\n        <column>\r\n         <property name=\"text\">\r\n          <string>배점</string>\r\n         </property>\r\n        </column>\r\n        <column>\r\n         <property name=\"text\">\r\n          <string>point</string>\r\n         </property>\r\n        </column>\r\n       </widget>\r\n       <widget class=\"QPushButton\" name=\"abt_cancel\">\r\n        <property name=\"geometry\">\r\n         <rect>\r\n          <x>340</x>\r\n          <y>10</y>\r\n          <width>75</width>\r\n          <height>23</height>\r\n         </rect>\r\n        </property>\r\n        <property name=\"text\">\r\n         <string>취소</string>\r\n        </property>\r\n       </widget>\r\n       <widget class=\"QPushButton\" name=\"abt_add\">\r\n        <property name=\"geometry\">\r\n         <rect>\r\n          <x>100</x>\r\n          <y>10</y>\r\n          <width>75</width>\r\n          <height>23</height>\r\n         </rect>\r\n        </property>\r\n        <property name=\"text\">\r\n         <string>문제 추가</string>\r\n        </property>\r\n       </widget>\r\n       <widget class=\"QLabel\" name=\"label_5\">\r\n        <property name=\"geometry\">\r\n         <rect>\r\n          <x>570</x>\r\n          <y>10</y>\r\n          <width>61</width>\r\n          <height>16</height>\r\n         </rect>\r\n        </property>\r\n        <property name=\"text\">\r\n         <string>배점 총합:</string>\r\n        </property>\r\n       </widget>\r\n       <widget class=\"QLabel\" name=\"al_score\">\r\n        <property name=\"geometry\">\r\n         <rect>\r\n          <x>640</x>\r\n          <y>10</y>\r\n          <width>61</width>\r\n          <height>16</height>\r\n         </rect>\r\n        </property>\r\n        <property name=\"font\">\r\n         <font>\r\n          <pointsize>12</pointsize>\r\n         </font>\r\n        </property>\r\n        <property name=\"text\">\r\n         <string>0</string>\r\n        </property>\r\n       </widget>\r\n      </widget>\r\n      <widget class=\"QWidget\" name=\"tab_u\">\r\n       <attribute name=\"title\">\r\n        <string>학생 관리</string>\r\n       </attribute>\r\n       <widget class=\"QListWidget\" name=\"alw_user\">\r\n        <property name=\"geometry\">\r\n         <rect>\r\n          <x>10</x>\r\n          <y>10</y>\r\n          <width>256</width>\r\n          <height>511</height>\r\n         </rect>\r\n        </property>\r\n       </widget>\r\n       <widget class=\"Line\" name=\"line\">\r\n        <property name=\"geometry\">\r\n         <rect>\r\n          <x>270</x>\r\n          <y>10</y>\r\n          <width>20</width>\r\n          <height>511</height>\r\n         </rect>\r\n        </property>\r\n        <property name=\"orientation\">\r\n         <enum>Qt::Vertical</enum>\r\n        </property>\r\n       </widget>\r\n       <widget class=\"QTreeWidget\" name=\"atw_record\">\r\n        <property name=\"geometry\">\r\n         <rect>\r\n          <x>290</x>\r\n          <y>10</y>\r\n          <width>491</width>\r\n          <height>511</height>\r\n         </rect>\r\n        </property>\r\n        <property name=\"editTriggers\">\r\n         <set>QAbstractItemView::NoEditTriggers</set>\r\n        </property>\r\n        <attribute name=\"headerCascadingSectionResizes\">\r\n         <bool>false</bool>\r\n        </attribute>\r\n        <attribute name=\"headerHighlightSections\">\r\n         <bool>true</bool>\r\n        </attribute>\r\n        <attribute name=\"headerShowSortIndicator\" stdset=\"0\">\r\n         <bool>false</bool>\r\n        </attribute>\r\n        <attribute name=\"headerStretchLastSection\">\r\n         <bool>true</bool>\r\n        </attribute>\r\n        <column>\r\n         <property name=\"text\">\r\n          <string>등록번호/ 문제</string>\r\n         </property>\r\n        </column>\r\n        <column>\r\n         <property name=\"text\">\r\n          <string>이름/ 답안</string>\r\n         </property>\r\n        </column>\r\n        <column>\r\n         <property name=\"text\">\r\n          <string>점수/ 이름</string>\r\n         </property>\r\n        </column>\r\n        <column>\r\n         <property name=\"text\">\r\n          <string>채점</string>\r\n         </property>\r\n        </column>\r\n        <column>\r\n         <property name=\"text\">\r\n          <string>소요시간</string>\r\n         </property>\r\n        </column>\r\n       </widget>\r\n      </widget>\r\n      <widget class=\"QWidget\" name=\"tab_c\">\r\n       <attribute name=\"title\">\r\n        <string>상담</string>\r\n       </attribute>\r\n       <widget class=\"QListWidget\" name=\"alw_chat_user\">\r\n        <property name=\"geometry\">\r\n         <rect>\r\n          <x>10</x>\r\n          <y>50</y>\r\n          <width>256</width>\r\n          <height>471</height>\r\n         </rect>\r\n        </property>\r\n       </widget>\r\n       <widget class=\"Line\" name=\"line_3\">\r\n        <property name=\"geometry\">\r\n         <rect>\r\n          <x>270</x>\r\n          <y>40</y>\r\n          <width>20</width>\r\n          <height>481</height>\r\n         </rect>\r\n        </property>\r\n        <property name=\"orientation\">\r\n         <enum>Qt::Vertical</enum>\r\n        </property>\r\n       </widget>\r\n       <widget class=\"Line\" name=\"line_4\">\r\n        <property name=\"geometry\">\r\n         <rect>\r\n          <x>10</x>\r\n          <y>30</y>\r\n          <width>771</width>\r\n          <height>20</height>\r\n         </rect>\r\n        </property>\r\n        <property name=\"orientation\">\r\n         <enum>Qt::Horizontal</enum>\r\n        </property>\r\n       </widget>\r\n       <widget class=\"QLineEdit\" name=\"ale_chat\">\r\n        <property name=\"geometry\">\r\n         <rect>\r\n          <x>10</x>\r\n          <y>10</y>\r\n          <width>771</width>\r\n          <height>22</height>\r\n         </rect>\r\n        </property>\r\n       </widget>\r\n       <widget class=\"QListWidget\" name=\"alw_chat\">\r\n        <property name=\"geometry\">\r\n         <rect>\r\n          <x>290</x>\r\n          <y>50</y>\r\n          <width>491</width>\r\n          <height>471</height>\r\n         </rect>\r\n        </property>\r\n       </widget>\r\n      </widget>\r\n      <widget class=\"QWidget\" name=\"tab_qa\">\r\n       <attribute name=\"title\">\r\n        <string>QnA</string>\r\n       </attribute>\r\n       <widget class=\"QLineEdit\" name=\"ale_qa\">\r\n        <property name=\"geometry\">\r\n         <rect>\r\n          <x>10</x>\r\n          <y>10</y>\r\n          <width>691</width>\r\n          <height>101</height>\r\n         </rect>\r\n        </property>\r\n       </widget>\r\n       <widget class=\"QPushButton\" name=\"abt_qa\">\r\n        <property name=\"geometry\">\r\n         <rect>\r\n          <x>710</x>\r\n          <y>10</y>\r\n          <width>75</width>\r\n          <height>101</height>\r\n         </rect>\r\n        </property>\r\n        <property name=\"text\">\r\n         <string>등록</string>\r\n        </property>\r\n       </widget>\r\n       <widget class=\"Line\" name=\"line_5\">\r\n        <property name=\"geometry\">\r\n         <rect>\r\n          <x>10</x>\r\n          <y>120</y>\r\n          <width>771</width>\r\n          <height>20</height>\r\n         </rect>\r\n        </property>\r\n        <property name=\"orientation\">\r\n         <enum>Qt::Horizontal</enum>\r\n        </property>\r\n       </widget>\r\n       <widget class=\"QTableWidget\" name=\"atw_qa\">\r\n        <property name=\"geometry\">\r\n         <rect>\r\n          <x>10</x>\r\n          <y>140</y>\r\n          <width>771</width>\r\n          <height>381</height>\r\n         </rect>\r\n        </property>\r\n       </widget>\r\n      </widget>\r\n     </widget>\r\n    </widget>\r\n   </widget>\r\n  </widget>\r\n  <widget class=\"QMenuBar\" name=\"menubar\">\r\n   <property name=\"geometry\">\r\n    <rect>\r\n     <x>0</x>\r\n     <y>0</y>\r\n     <width>800</width>\r\n     <height>21</height>\r\n    </rect>\r\n   </property>\r\n  </widget>\r\n  <widget class=\"QStatusBar\" name=\"statusbar\"/>\r\n </widget>\r\n <resources/>\r\n <connections/>\r\n</ui>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/main.ui b/main.ui
--- a/main.ui	(revision d138544351d7c79df121755491419dcd7f579f09)
+++ b/main.ui	(date 1675998546167)
@@ -234,7 +234,7 @@
        </rect>
       </property>
       <property name="currentIndex">
-       <number>4</number>
+       <number>0</number>
       </property>
       <widget class="QWidget" name="tab">
        <attribute name="title">
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"fa1378f8-de63-4f4f-b010-13ee8a7202c8\" name=\"변경\" comment=\"23.02.10 11:51 지혁\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/.name\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/misc.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/misc.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/jh_student.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/jh_student.py\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Python Script\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Merge.Settings\">\r\n    <option name=\"BRANCH\" value=\"origin/jihyeok\" />\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n    <option name=\"RESET_MODE\" value=\"MIXED\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">\r\n    <option name=\"selectedUrlAndAccountId\">\r\n      <UrlAndAccount>\r\n        <option name=\"accountId\" value=\"bebb8c7f-d5b5-46d3-a3a5-2ec2a320a039\" />\r\n        <option name=\"url\" value=\"https://github.com/ChoiJiHyeok/APIproject.git\" />\r\n      </UrlAndAccount>\r\n    </option>\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2LLwyA4WGbNWFW17FfE2hoEkqfO\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"last_opened_file_path\": \"C:/pythonProject4\",\r\n    \"settings.editor.selected.configurable\": \"com.jetbrains.python.configuration.PyActiveSdkModuleConfigurable\"\r\n  },\r\n  \"keyToStringList\": {\r\n    \"GitStage.ChangesTree.GroupingKeys\": [\r\n      \"directory\",\r\n      \"module\",\r\n      \"repository\"\r\n    ]\r\n  }\r\n}]]></component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\Kiot\\PycharmProjects\\APIproject\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Python.main\">\r\n    <configuration name=\"main\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"C:\\pythonProject4\\Scripts\\python.exe\" />\r\n      <option name=\"SDK_NAME\" value=\"Python 3.9 (pythonProject4)\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <module name=\"\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/main.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"server\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"APIproject\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/server.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"student\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"APIproject\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/student.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"teacher\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"APIproject\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/teacher.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"teacher1\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"APIproject\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/teacher1.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Python.main\" />\r\n        <item itemvalue=\"Python.teacher\" />\r\n        <item itemvalue=\"Python.server\" />\r\n        <item itemvalue=\"Python.student\" />\r\n        <item itemvalue=\"Python.teacher1\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"애플리케이션 수준\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"디폴트 작업\">\r\n      <changelist id=\"fa1378f8-de63-4f4f-b010-13ee8a7202c8\" name=\"변경\" comment=\"\" />\r\n      <created>1675663922632</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1675663922632</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"230206 API_test.py 추가\">\r\n      <created>1675664048841</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1675664048841</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"230206 API_test.py 신간 측정 추가\">\r\n      <created>1675665227533</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1675665227533</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"230206 UI 생성\">\r\n      <created>1675679541327</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1675679541327</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"230206 select 모듈 예제\">\r\n      <created>1675683799278</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1675683799278</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"230207 서버-클라 기초틀\">\r\n      <created>1675757221132</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1675757221132</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"230207 가입, 로그인 기능\">\r\n      <created>1675768722125</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1675768722125</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"230208 주석 추가\">\r\n      <created>1675820244029</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1675820244029</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"230208 코드 수정\">\r\n      <created>1675823419538</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1675823419538</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"230208 문제만들기 하는중\">\r\n      <created>1675831275589</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1675831275589</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"230208 문제만들기(단일클라기능구현)\">\r\n      <created>1675845709083</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1675845709083</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"230208 문제만들기(다중클라기능구현)\">\r\n      <created>1675849504914</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1675849504914</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"230208 문제만들기(다중클라기능구현) 주석 추가\">\r\n      <created>1675853162416</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1675853162416</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00013\" summary=\"230208 문제만들기(다중클라기능구현) 주석 추가\">\r\n      <created>1675853361754</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1675853361754</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00014\" summary=\"230208 학생 회원가입시 회원관리DB에 등록 추가\">\r\n      <created>1675854174008</created>\r\n      <option name=\"number\" value=\"00014\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1675854174008</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00015\" summary=\"230209 학생 회원가입시 이름없이 가입 수정\">\r\n      <created>1675911689159</created>\r\n      <option name=\"number\" value=\"00015\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1675911689159</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00016\" summary=\"230209 학생관리\">\r\n      <created>1675935011016</created>\r\n      <option name=\"number\" value=\"00016\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1675935011016</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00017\" summary=\"230209 큰 데이터 받기\">\r\n      <created>1675943209019</created>\r\n      <option name=\"number\" value=\"00017\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00017\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1675943209019</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00018\" summary=\"230209 큰 데이터 받기\">\r\n      <created>1675991020710</created>\r\n      <option name=\"number\" value=\"00018\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00018\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1675991020710</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00019\" summary=\"Revert &quot;230209 큰 데이터 받기&quot;&#10;&#10;This reverts commit aead9543\">\r\n      <created>1675992307704</created>\r\n      <option name=\"number\" value=\"00019\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00019\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1675992307704</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00020\" summary=\"Revert &quot;230209 학생관리&quot;&#10;&#10;This reverts commit f1b5dae4\">\r\n      <created>1675992414056</created>\r\n      <option name=\"number\" value=\"00020\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00020\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1675992414056</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00021\" summary=\"Revert &quot;230209 학생관리&quot;&#10;&#10;This reverts commit f1b5dae4\">\r\n      <created>1675992542961</created>\r\n      <option name=\"number\" value=\"00021\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00021\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1675992542961</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00022\" summary=\"Revert &quot;230209 학생관리&quot;&#10;&#10;This reverts commit f1b5dae4\">\r\n      <created>1675992811334</created>\r\n      <option name=\"number\" value=\"00022\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00022\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1675992811334</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00023\" summary=\"Revert &quot;230209 학생관리&quot;&#10;&#10;This reverts commit f1b5dae4\">\r\n      <created>1675992877645</created>\r\n      <option name=\"number\" value=\"00023\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00023\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1675992877645</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00024\" summary=\"230210 - 복원중\">\r\n      <created>1675993062691</created>\r\n      <option name=\"number\" value=\"00024\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00024\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1675993062691</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00025\" summary=\"230210 - 복원\">\r\n      <created>1675993642503</created>\r\n      <option name=\"number\" value=\"00025\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00025\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1675993642503</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00026\" summary=\"230210 - 복원\">\r\n      <created>1675993759912</created>\r\n      <option name=\"number\" value=\"00026\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00026\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1675993759912</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00027\" summary=\"230210 11:27 파일 이름 변경\">\r\n      <created>1675996058660</created>\r\n      <option name=\"number\" value=\"00027\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00027\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1675996058660</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00028\" summary=\"230210 11:27 main 파일 생성\">\r\n      <created>1675996186112</created>\r\n      <option name=\"number\" value=\"00028\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00028\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1675996186112</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00029\" summary=\"23.02.10 11:48 지혁\">\r\n      <created>1675997315043</created>\r\n      <option name=\"number\" value=\"00029\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00029\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1675997315043</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00030\" summary=\"23.02.10 11:51 지혁\">\r\n      <created>1675997515222</created>\r\n      <option name=\"number\" value=\"00030\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00030\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1675997515222</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00031\" summary=\"23.02.10 11:51 지혁\">\r\n      <created>1675997582721</created>\r\n      <option name=\"number\" value=\"00031\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00031\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1675997582721</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"32\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"230206 API_test.py 추가\" />\r\n    <MESSAGE value=\"230206 API_test.py 신간 측정 추가\" />\r\n    <MESSAGE value=\"230206 UI 생성\" />\r\n    <MESSAGE value=\"230206 select 모듈 예제\" />\r\n    <MESSAGE value=\"230207 서버-클라 기초틀\" />\r\n    <MESSAGE value=\"230207 가입, 로그인 기능\" />\r\n    <MESSAGE value=\"230208 주석 추가\" />\r\n    <MESSAGE value=\"230208 코드 수정\" />\r\n    <MESSAGE value=\"230208 문제만들기 하는중\" />\r\n    <MESSAGE value=\"230208 문제만들기(단일클라기능구현)\" />\r\n    <MESSAGE value=\"230208 문제만들기(다중클라기능구현)\" />\r\n    <MESSAGE value=\"230208 문제만들기(다중클라기능구현) 주석 추가\" />\r\n    <MESSAGE value=\"230208 학생 회원가입시 회원관리DB에 등록 추가\" />\r\n    <MESSAGE value=\"230209 학생 회원가입시 이름없이 가입 수정\" />\r\n    <MESSAGE value=\"230209 학생관리\" />\r\n    <MESSAGE value=\"230209 큰 데이터 받기\" />\r\n    <MESSAGE value=\"Revert &quot;230209 큰 데이터 받기&quot;&#10;&#10;This reverts commit aead9543\" />\r\n    <MESSAGE value=\"Revert &quot;230209 학생관리&quot;&#10;&#10;This reverts commit f1b5dae4\" />\r\n    <MESSAGE value=\"230210 - 복원중\" />\r\n    <MESSAGE value=\"230210 - 복원\" />\r\n    <MESSAGE value=\"230210 11:27 파일 이름 변경\" />\r\n    <MESSAGE value=\"230210 11:27 main 파일 생성\" />\r\n    <MESSAGE value=\"23.02.10 11:48 지혁\" />\r\n    <MESSAGE value=\"23.02.10 11:51 지혁\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"23.02.10 11:51 지혁\" />\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <breakpoint-manager>\r\n      <default-breakpoints>\r\n        <breakpoint type=\"python-exception\">\r\n          <properties notifyOnTerminate=\"true\" exception=\"BaseException\">\r\n            <option name=\"notifyOnTerminate\" value=\"true\" />\r\n          </properties>\r\n        </breakpoint>\r\n      </default-breakpoints>\r\n    </breakpoint-manager>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision d138544351d7c79df121755491419dcd7f579f09)
+++ b/.idea/workspace.xml	(date 1675999616984)
@@ -4,11 +4,20 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="fa1378f8-de63-4f4f-b010-13ee8a7202c8" name="변경" comment="23.02.10 11:51 지혁">
-      <change beforePath="$PROJECT_DIR$/.idea/.name" beforeDir="false" />
+    <list default="true" id="543b6ac6-e1f0-4e98-b32d-d809c0500b17" name="변경" comment="">
+      <change afterPath="$PROJECT_DIR$/.idea/shelf/2023-02-10__11_54_______.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/shelf/2023-02-10_오전_11_54,_업데이트_전에_커밋되지_않은_변경_내용/shelved.patch" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/2023-02-10__12_01__________.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/2023-02-10__12_01__________.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/eh_student.py" beforeDir="false" afterPath="$PROJECT_DIR$/eh_student.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/eh_teacher.py" beforeDir="false" afterPath="$PROJECT_DIR$/eh_teacher.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/jh_server.py" beforeDir="false" afterPath="$PROJECT_DIR$/jh_server.py" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/jh_student.py" beforeDir="false" afterPath="$PROJECT_DIR$/jh_student.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/jyw_server.py" beforeDir="false" afterPath="$PROJECT_DIR$/jyw_server.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/jyw_teacher.py" beforeDir="false" afterPath="$PROJECT_DIR$/jyw_teacher.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/main.ui" beforeDir="false" afterPath="$PROJECT_DIR$/main.ui" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/mainserver.py" beforeDir="false" afterPath="$PROJECT_DIR$/mainserver.py" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -49,40 +58,60 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent"><![CDATA[{
-  "keyToString": {
-    "RunOnceActivity.OpenProjectViewOnStart": "true",
-    "RunOnceActivity.ShowReadmeOnStart": "true",
-    "last_opened_file_path": "C:/pythonProject4",
-    "settings.editor.selected.configurable": "com.jetbrains.python.configuration.PyActiveSdkModuleConfigurable"
+  <component name="PropertiesComponent">{
+  &quot;keyToString&quot;: {
+    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
+    &quot;last_opened_file_path&quot;: &quot;C:/Users/Kiot/PycharmProjects/APIproject&quot;,
+    &quot;settings.editor.selected.configurable&quot;: &quot;com.jetbrains.python.configuration.PyActiveSdkModuleConfigurable&quot;
   },
-  "keyToStringList": {
-    "GitStage.ChangesTree.GroupingKeys": [
-      "directory",
-      "module",
-      "repository"
+  &quot;keyToStringList&quot;: {
+    &quot;GitStage.ChangesTree.GroupingKeys&quot;: [
+      &quot;directory&quot;,
+      &quot;module&quot;,
+      &quot;repository&quot;
     ]
   }
-}]]></component>
+}</component>
   <component name="RecentsManager">
     <key name="CopyFile.RECENT_KEYS">
       <recent name="C:\Users\Kiot\PycharmProjects\APIproject" />
     </key>
   </component>
   <component name="RunManager" selected="Python.main">
-    <configuration name="main" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
+    <configuration default="true" type="PythonConfigurationType" factoryName="Python">
       <option name="INTERPRETER_OPTIONS" value="" />
       <option name="PARENT_ENVS" value="true" />
       <envs>
         <env name="PYTHONUNBUFFERED" value="1" />
       </envs>
-      <option name="SDK_HOME" value="C:\pythonProject4\Scripts\python.exe" />
-      <option name="SDK_NAME" value="Python 3.9 (pythonProject4)" />
-      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
+      <option name="SDK_HOME" value="" />
+      <option name="WORKING_DIRECTORY" value="" />
       <option name="IS_MODULE_SDK" value="false" />
       <option name="ADD_CONTENT_ROOTS" value="true" />
       <option name="ADD_SOURCE_ROOTS" value="true" />
       <module name="" />
+      <option name="SCRIPT_NAME" value="" />
+      <option name="PARAMETERS" value="" />
+      <option name="SHOW_COMMAND_LINE" value="false" />
+      <option name="EMULATE_TERMINAL" value="false" />
+      <option name="MODULE_MODE" value="false" />
+      <option name="REDIRECT_INPUT" value="false" />
+      <option name="INPUT_FILE" value="" />
+      <method v="2" />
+    </configuration>
+    <configuration name="main" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
+      <module name="APIproject" />
+      <option name="INTERPRETER_OPTIONS" value="" />
+      <option name="PARENT_ENVS" value="true" />
+      <envs>
+        <env name="PYTHONUNBUFFERED" value="1" />
+      </envs>
+      <option name="SDK_HOME" value="" />
+      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
+      <option name="IS_MODULE_SDK" value="true" />
+      <option name="ADD_CONTENT_ROOTS" value="true" />
+      <option name="ADD_SOURCE_ROOTS" value="true" />
       <option name="SCRIPT_NAME" value="$PROJECT_DIR$/main.py" />
       <option name="PARAMETERS" value="" />
       <option name="SHOW_COMMAND_LINE" value="false" />
@@ -176,12 +205,72 @@
       <option name="INPUT_FILE" value="" />
       <method v="2" />
     </configuration>
+    <configuration default="true" type="Tox" factoryName="Tox">
+      <option name="INTERPRETER_OPTIONS" value="" />
+      <option name="PARENT_ENVS" value="true" />
+      <option name="SDK_HOME" value="" />
+      <option name="WORKING_DIRECTORY" value="" />
+      <option name="IS_MODULE_SDK" value="false" />
+      <option name="ADD_CONTENT_ROOTS" value="true" />
+      <option name="ADD_SOURCE_ROOTS" value="true" />
+      <method v="2" />
+    </configuration>
+    <configuration default="true" type="docs" factoryName="Docutils task">
+      <option name="INTERPRETER_OPTIONS" value="" />
+      <option name="PARENT_ENVS" value="true" />
+      <option name="SDK_HOME" value="" />
+      <option name="WORKING_DIRECTORY" value="" />
+      <option name="IS_MODULE_SDK" value="false" />
+      <option name="ADD_CONTENT_ROOTS" value="true" />
+      <option name="ADD_SOURCE_ROOTS" value="true" />
+      <module name="" />
+      <option name="docutils_input_file" value="" />
+      <option name="docutils_output_file" value="" />
+      <option name="docutils_params" value="" />
+      <option name="docutils_task" value="" />
+      <option name="docutils_open_in_browser" value="false" />
+      <method v="2" />
+    </configuration>
+    <configuration default="true" type="docs" factoryName="Sphinx task">
+      <option name="INTERPRETER_OPTIONS" value="" />
+      <option name="PARENT_ENVS" value="true" />
+      <option name="SDK_HOME" value="" />
+      <option name="WORKING_DIRECTORY" value="" />
+      <option name="IS_MODULE_SDK" value="false" />
+      <option name="ADD_CONTENT_ROOTS" value="true" />
+      <option name="ADD_SOURCE_ROOTS" value="true" />
+      <module name="" />
+      <option name="docutils_input_file" value="" />
+      <option name="docutils_output_file" value="" />
+      <option name="docutils_params" value="" />
+      <option name="docutils_task" value="" />
+      <option name="docutils_open_in_browser" value="false" />
+      <method v="2" />
+    </configuration>
+    <configuration default="true" type="tests" factoryName="Doctests">
+      <option name="INTERPRETER_OPTIONS" value="" />
+      <option name="PARENT_ENVS" value="true" />
+      <option name="SDK_HOME" value="" />
+      <option name="WORKING_DIRECTORY" value="" />
+      <option name="IS_MODULE_SDK" value="false" />
+      <option name="ADD_CONTENT_ROOTS" value="true" />
+      <option name="ADD_SOURCE_ROOTS" value="true" />
+      <module name="" />
+      <option name="SCRIPT_NAME" value="" />
+      <option name="CLASS_NAME" value="" />
+      <option name="METHOD_NAME" value="" />
+      <option name="FOLDER_NAME" value="" />
+      <option name="TEST_TYPE" value="TEST_SCRIPT" />
+      <option name="PATTERN" value="" />
+      <option name="USE_PATTERN" value="false" />
+      <method v="2" />
+    </configuration>
     <recent_temporary>
       <list>
-        <item itemvalue="Python.main" />
         <item itemvalue="Python.teacher" />
         <item itemvalue="Python.server" />
         <item itemvalue="Python.student" />
+        <item itemvalue="Python.main" />
         <item itemvalue="Python.teacher1" />
       </list>
     </recent_temporary>
@@ -391,28 +480,7 @@
       <option name="project" value="LOCAL" />
       <updated>1675996186112</updated>
     </task>
-    <task id="LOCAL-00029" summary="23.02.10 11:48 지혁">
-      <created>1675997315043</created>
-      <option name="number" value="00029" />
-      <option name="presentableId" value="LOCAL-00029" />
-      <option name="project" value="LOCAL" />
-      <updated>1675997315043</updated>
-    </task>
-    <task id="LOCAL-00030" summary="23.02.10 11:51 지혁">
-      <created>1675997515222</created>
-      <option name="number" value="00030" />
-      <option name="presentableId" value="LOCAL-00030" />
-      <option name="project" value="LOCAL" />
-      <updated>1675997515222</updated>
-    </task>
-    <task id="LOCAL-00031" summary="23.02.10 11:51 지혁">
-      <created>1675997582721</created>
-      <option name="number" value="00031" />
-      <option name="presentableId" value="LOCAL-00031" />
-      <option name="project" value="LOCAL" />
-      <updated>1675997582721</updated>
-    </task>
-    <option name="localTasksCounter" value="32" />
+    <option name="localTasksCounter" value="29" />
     <servers />
   </component>
   <component name="Vcs.Log.Tabs.Properties">
@@ -449,9 +517,7 @@
     <MESSAGE value="230210 - 복원" />
     <MESSAGE value="230210 11:27 파일 이름 변경" />
     <MESSAGE value="230210 11:27 main 파일 생성" />
-    <MESSAGE value="23.02.10 11:48 지혁" />
-    <MESSAGE value="23.02.10 11:51 지혁" />
-    <option name="LAST_COMMIT_MESSAGE" value="23.02.10 11:51 지혁" />
+    <option name="LAST_COMMIT_MESSAGE" value="230210 11:27 main 파일 생성" />
   </component>
   <component name="XDebuggerManager">
     <breakpoint-manager>
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ProjectRootManager\" version=\"2\" project-jdk-name=\"Python 3.9 (APIproject)\" project-jdk-type=\"Python SDK\" />\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision d138544351d7c79df121755491419dcd7f579f09)
+++ b/.idea/misc.xml	(date 1675998709386)
@@ -1,4 +1,4 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
-  <component name="ProjectRootManager" version="2" project-jdk-name="Python 3.9 (APIproject)" project-jdk-type="Python SDK" />
+  <component name="ProjectRootManager" version="2" project-jdk-name="Python 3.9" project-jdk-type="Python SDK" />
 </project>
\ No newline at end of file
diff --git a/.idea/shelf/2023-02-10_오전_11_54,_업데이트_전에_커밋되지_않은_변경_내용/shelved.patch b/.idea/shelf/2023-02-10_오전_11_54,_업데이트_전에_커밋되지_않은_변경_내용/shelved.patch
new file mode 100644
